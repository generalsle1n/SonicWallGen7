/*
 * SonicOS API
 *
 * __Swagger Specification for SonicOS APIs__  ___SonicOS support two-factor and bearer token login from SWAGGER only.___  Please follow the following steps to login. > 1. POST \"tfa\" with your username, password, and two-factor code to the firewall. If you are authenticating a username for the first time, please login to GUI and scan the QR code to activate two-factor authentication. > 2. The Bearer Token is returned in response to the \"tfa\" message. Copy the Bearer Token to the \"Authorize\" button. > 3. DELETE \"auth\" to logout of the current session. 
 *
 * The version of the OpenAPI document: 7.0.1
 * Contact: sonicOsApiSupport@SonicWall.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using SonicWallGen7.Client;
using SonicWallGen7.Api;
// uncomment below to import models
//using SonicWallGen7.Model;

namespace SonicWallGen7.Test.Api
{
    /// <summary>
    ///  Class for testing UserSsoTerminalServicesAgentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UserSsoTerminalServicesAgentApiTests : IDisposable
    {
        private UserSsoTerminalServicesAgentApi instance;

        public UserSsoTerminalServicesAgentApiTests()
        {
            instance = new UserSsoTerminalServicesAgentApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UserSsoTerminalServicesAgentApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' UserSsoTerminalServicesAgentApi
            //Assert.IsType<UserSsoTerminalServicesAgentApi>(instance);
        }

        /// <summary>
        /// Test UserSsoTerminalServicesAgentsGet
        /// </summary>
        [Fact]
        public void UserSsoTerminalServicesAgentsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserSsoTerminalServicesAgentsGet();
            //Assert.IsType<UserSsoTerminalServicesAgentCollection>(response);
        }

        /// <summary>
        /// Test UserSsoTerminalServicesAgentsNameNAMEDelete
        /// </summary>
        [Fact]
        public void UserSsoTerminalServicesAgentsNameNAMEDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string NAME = null;
            //var response = instance.UserSsoTerminalServicesAgentsNameNAMEDelete(NAME);
            //Assert.IsType<ApiStatus>(response);
        }

        /// <summary>
        /// Test UserSsoTerminalServicesAgentsNameNAMEGet
        /// </summary>
        [Fact]
        public void UserSsoTerminalServicesAgentsNameNAMEGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string NAME = null;
            //var response = instance.UserSsoTerminalServicesAgentsNameNAMEGet(NAME);
            //Assert.IsType<UserSsoTerminalServicesAgentCollection>(response);
        }

        /// <summary>
        /// Test UserSsoTerminalServicesAgentsNameNAMEPatch
        /// </summary>
        [Fact]
        public void UserSsoTerminalServicesAgentsNameNAMEPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string NAME = null;
            //UserSsoTerminalServicesAgentCollection? userSsoTerminalServicesAgentCollection = null;
            //var response = instance.UserSsoTerminalServicesAgentsNameNAMEPatch(NAME, userSsoTerminalServicesAgentCollection);
            //Assert.IsType<ApiStatus>(response);
        }

        /// <summary>
        /// Test UserSsoTerminalServicesAgentsNameNAMEPut
        /// </summary>
        [Fact]
        public void UserSsoTerminalServicesAgentsNameNAMEPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string NAME = null;
            //UserSsoTerminalServicesAgentCollection? userSsoTerminalServicesAgentCollection = null;
            //var response = instance.UserSsoTerminalServicesAgentsNameNAMEPut(NAME, userSsoTerminalServicesAgentCollection);
            //Assert.IsType<ApiStatus>(response);
        }

        /// <summary>
        /// Test UserSsoTerminalServicesAgentsPatch
        /// </summary>
        [Fact]
        public void UserSsoTerminalServicesAgentsPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserSsoTerminalServicesAgentCollection? userSsoTerminalServicesAgentCollection = null;
            //var response = instance.UserSsoTerminalServicesAgentsPatch(userSsoTerminalServicesAgentCollection);
            //Assert.IsType<ApiStatus>(response);
        }

        /// <summary>
        /// Test UserSsoTerminalServicesAgentsPost
        /// </summary>
        [Fact]
        public void UserSsoTerminalServicesAgentsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserSsoTerminalServicesAgentCollection? userSsoTerminalServicesAgentCollection = null;
            //var response = instance.UserSsoTerminalServicesAgentsPost(userSsoTerminalServicesAgentCollection);
            //Assert.IsType<ApiStatus>(response);
        }

        /// <summary>
        /// Test UserSsoTerminalServicesAgentsPut
        /// </summary>
        [Fact]
        public void UserSsoTerminalServicesAgentsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserSsoTerminalServicesAgentCollection? userSsoTerminalServicesAgentCollection = null;
            //var response = instance.UserSsoTerminalServicesAgentsPut(userSsoTerminalServicesAgentCollection);
            //Assert.IsType<ApiStatus>(response);
        }
    }
}
