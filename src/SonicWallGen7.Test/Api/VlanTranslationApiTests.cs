/*
 * SonicOS API
 *
 * __Swagger Specification for SonicOS APIs__  ___SonicOS support two-factor and bearer token login from SWAGGER only.___  Please follow the following steps to login. > 1. POST \"tfa\" with your username, password, and two-factor code to the firewall. If you are authenticating a username for the first time, please login to GUI and scan the QR code to activate two-factor authentication. > 2. The Bearer Token is returned in response to the \"tfa\" message. Copy the Bearer Token to the \"Authorize\" button. > 3. DELETE \"auth\" to logout of the current session. 
 *
 * The version of the OpenAPI document: 7.0.1
 * Contact: sonicOsApiSupport@SonicWall.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using SonicWallGen7.Client;
using SonicWallGen7.Api;
// uncomment below to import models
//using SonicWallGen7.Model;

namespace SonicWallGen7.Test.Api
{
    /// <summary>
    ///  Class for testing VlanTranslationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class VlanTranslationApiTests : IDisposable
    {
        private VlanTranslationApi instance;

        public VlanTranslationApiTests()
        {
            instance = new VlanTranslationApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of VlanTranslationApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' VlanTranslationApi
            //Assert.IsType<VlanTranslationApi>(instance);
        }

        /// <summary>
        /// Test VlanTranslationsGet
        /// </summary>
        [Fact]
        public void VlanTranslationsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.VlanTranslationsGet();
            //Assert.IsType<VlanTranslationCollection>(response);
        }

        /// <summary>
        /// Test VlanTranslationsIngressInterfaceINGRESSIFVlanINGRESSIDEgressInterfaceEGRESSIFVlanEGRESSIDDelete
        /// </summary>
        [Fact]
        public void VlanTranslationsIngressInterfaceINGRESSIFVlanINGRESSIDEgressInterfaceEGRESSIFVlanEGRESSIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string INGRESSIF = null;
            //decimal INGRESSID = null;
            //string EGRESSIF = null;
            //decimal EGRESSID = null;
            //var response = instance.VlanTranslationsIngressInterfaceINGRESSIFVlanINGRESSIDEgressInterfaceEGRESSIFVlanEGRESSIDDelete(INGRESSIF, INGRESSID, EGRESSIF, EGRESSID);
            //Assert.IsType<ApiStatus>(response);
        }

        /// <summary>
        /// Test VlanTranslationsIngressInterfaceINGRESSIFVlanINGRESSIDEgressInterfaceEGRESSIFVlanEGRESSIDGet
        /// </summary>
        [Fact]
        public void VlanTranslationsIngressInterfaceINGRESSIFVlanINGRESSIDEgressInterfaceEGRESSIFVlanEGRESSIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string INGRESSIF = null;
            //decimal INGRESSID = null;
            //string EGRESSIF = null;
            //decimal EGRESSID = null;
            //var response = instance.VlanTranslationsIngressInterfaceINGRESSIFVlanINGRESSIDEgressInterfaceEGRESSIFVlanEGRESSIDGet(INGRESSIF, INGRESSID, EGRESSIF, EGRESSID);
            //Assert.IsType<VlanTranslationCollection>(response);
        }

        /// <summary>
        /// Test VlanTranslationsIngressInterfaceINGRESSIFVlanINGRESSIDEgressInterfaceEGRESSIFVlanEGRESSIDPatch
        /// </summary>
        [Fact]
        public void VlanTranslationsIngressInterfaceINGRESSIFVlanINGRESSIDEgressInterfaceEGRESSIFVlanEGRESSIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string INGRESSIF = null;
            //decimal INGRESSID = null;
            //string EGRESSIF = null;
            //decimal EGRESSID = null;
            //VlanTranslationCollection? vlanTranslationCollection = null;
            //var response = instance.VlanTranslationsIngressInterfaceINGRESSIFVlanINGRESSIDEgressInterfaceEGRESSIFVlanEGRESSIDPatch(INGRESSIF, INGRESSID, EGRESSIF, EGRESSID, vlanTranslationCollection);
            //Assert.IsType<ApiStatus>(response);
        }

        /// <summary>
        /// Test VlanTranslationsIngressInterfaceINGRESSIFVlanINGRESSIDEgressInterfaceEGRESSIFVlanEGRESSIDPut
        /// </summary>
        [Fact]
        public void VlanTranslationsIngressInterfaceINGRESSIFVlanINGRESSIDEgressInterfaceEGRESSIFVlanEGRESSIDPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string INGRESSIF = null;
            //decimal INGRESSID = null;
            //string EGRESSIF = null;
            //decimal EGRESSID = null;
            //VlanTranslationCollection? vlanTranslationCollection = null;
            //var response = instance.VlanTranslationsIngressInterfaceINGRESSIFVlanINGRESSIDEgressInterfaceEGRESSIFVlanEGRESSIDPut(INGRESSIF, INGRESSID, EGRESSIF, EGRESSID, vlanTranslationCollection);
            //Assert.IsType<ApiStatus>(response);
        }

        /// <summary>
        /// Test VlanTranslationsPatch
        /// </summary>
        [Fact]
        public void VlanTranslationsPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //VlanTranslationCollection? vlanTranslationCollection = null;
            //var response = instance.VlanTranslationsPatch(vlanTranslationCollection);
            //Assert.IsType<ApiStatus>(response);
        }

        /// <summary>
        /// Test VlanTranslationsPost
        /// </summary>
        [Fact]
        public void VlanTranslationsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //VlanTranslationCollection? vlanTranslationCollection = null;
            //var response = instance.VlanTranslationsPost(vlanTranslationCollection);
            //Assert.IsType<ApiStatus>(response);
        }

        /// <summary>
        /// Test VlanTranslationsPut
        /// </summary>
        [Fact]
        public void VlanTranslationsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //VlanTranslationCollection? vlanTranslationCollection = null;
            //var response = instance.VlanTranslationsPut(vlanTranslationCollection);
            //Assert.IsType<ApiStatus>(response);
        }
    }
}
