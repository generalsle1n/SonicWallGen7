/*
 * SonicOS API
 *
 * __Swagger Specification for SonicOS APIs__  ___SonicOS support two-factor and bearer token login from SWAGGER only.___  Please follow the following steps to login. > 1. POST \"tfa\" with your username, password, and two-factor code to the firewall. If you are authenticating a username for the first time, please login to GUI and scan the QR code to activate two-factor authentication. > 2. The Bearer Token is returned in response to the \"tfa\" message. Copy the Bearer Token to the \"Authorize\" button. > 3. DELETE \"auth\" to logout of the current session. 
 *
 * The version of the OpenAPI document: 7.0.1
 * Contact: sonicOsApiSupport@SonicWall.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using SonicWallGen7.Client;
using SonicWallGen7.Api;
// uncomment below to import models
//using SonicWallGen7.Model;

namespace SonicWallGen7.Test.Api
{
    /// <summary>
    ///  Class for testing UserStatusApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UserStatusApiTests : IDisposable
    {
        private UserStatusApi instance;

        public UserStatusApiTests()
        {
            instance = new UserStatusApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UserStatusApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' UserStatusApi
            //Assert.IsType<UserStatusApi>(instance);
        }

        /// <summary>
        /// Test UserStatusAccountLockedOutGet
        /// </summary>
        [Fact]
        public void UserStatusAccountLockedOutGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusAccountLockedOutGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusActiveGet
        /// </summary>
        [Fact]
        public void UserStatusActiveGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusActiveGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusActiveIpUSERIPGet
        /// </summary>
        [Fact]
        public void UserStatusActiveIpUSERIPGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string USERIP = null;
            //var response = instance.UserStatusActiveIpUSERIPGet(USERIP);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusActiveNameUSERNAMEGet
        /// </summary>
        [Fact]
        public void UserStatusActiveNameUSERNAMEGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string USERNAME = null;
            //var response = instance.UserStatusActiveNameUSERNAMEGet(USERNAME);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusActiveSortByInactivityRemainingGet
        /// </summary>
        [Fact]
        public void UserStatusActiveSortByInactivityRemainingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusActiveSortByInactivityRemainingGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusActiveSortByInvertedGet
        /// </summary>
        [Fact]
        public void UserStatusActiveSortByInvertedGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusActiveSortByInvertedGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusActiveSortByIpAddressGet
        /// </summary>
        [Fact]
        public void UserStatusActiveSortByIpAddressGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusActiveSortByIpAddressGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusActiveSortByPartitionGet
        /// </summary>
        [Fact]
        public void UserStatusActiveSortByPartitionGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusActiveSortByPartitionGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusActiveSortBySessionTimeGet
        /// </summary>
        [Fact]
        public void UserStatusActiveSortBySessionTimeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusActiveSortBySessionTimeGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusActiveSortByTimeRemainingGet
        /// </summary>
        [Fact]
        public void UserStatusActiveSortByTimeRemainingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusActiveSortByTimeRemainingGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusActiveSortByTypeOrModeGet
        /// </summary>
        [Fact]
        public void UserStatusActiveSortByTypeOrModeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusActiveSortByTypeOrModeGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusActiveSortByUserNameGet
        /// </summary>
        [Fact]
        public void UserStatusActiveSortByUserNameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusActiveSortByUserNameGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusAtIPGet
        /// </summary>
        [Fact]
        public void UserStatusAtIPGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string IP = null;
            //var response = instance.UserStatusAtIPGet(IP);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusAtIPUserUSERNUMBERGet
        /// </summary>
        [Fact]
        public void UserStatusAtIPUserUSERNUMBERGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string IP = null;
            //decimal USER_NUMBER = null;
            //var response = instance.UserStatusAtIPUserUSERNUMBERGet(IP, USER_NUMBER);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusCliGet
        /// </summary>
        [Fact]
        public void UserStatusCliGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusCliGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusFromThisLoginGet
        /// </summary>
        [Fact]
        public void UserStatusFromThisLoginGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusFromThisLoginGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusInactiveGet
        /// </summary>
        [Fact]
        public void UserStatusInactiveGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusInactiveGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusInactiveIpUSERIPGet
        /// </summary>
        [Fact]
        public void UserStatusInactiveIpUSERIPGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string USERIP = null;
            //var response = instance.UserStatusInactiveIpUSERIPGet(USERIP);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusInactiveNameUSERNAMEGet
        /// </summary>
        [Fact]
        public void UserStatusInactiveNameUSERNAMEGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string USERNAME = null;
            //var response = instance.UserStatusInactiveNameUSERNAMEGet(USERNAME);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusInactiveSortByInactivityRemainingGet
        /// </summary>
        [Fact]
        public void UserStatusInactiveSortByInactivityRemainingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusInactiveSortByInactivityRemainingGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusInactiveSortByInvertedGet
        /// </summary>
        [Fact]
        public void UserStatusInactiveSortByInvertedGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusInactiveSortByInvertedGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusInactiveSortByIpAddressGet
        /// </summary>
        [Fact]
        public void UserStatusInactiveSortByIpAddressGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusInactiveSortByIpAddressGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusInactiveSortByPartitionGet
        /// </summary>
        [Fact]
        public void UserStatusInactiveSortByPartitionGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusInactiveSortByPartitionGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusInactiveSortBySessionTimeGet
        /// </summary>
        [Fact]
        public void UserStatusInactiveSortBySessionTimeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusInactiveSortBySessionTimeGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusInactiveSortByTimeRemainingGet
        /// </summary>
        [Fact]
        public void UserStatusInactiveSortByTimeRemainingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusInactiveSortByTimeRemainingGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusInactiveSortByTypeOrModeGet
        /// </summary>
        [Fact]
        public void UserStatusInactiveSortByTypeOrModeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusInactiveSortByTypeOrModeGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusInactiveSortByUserNameGet
        /// </summary>
        [Fact]
        public void UserStatusInactiveSortByUserNameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusInactiveSortByUserNameGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusLockedOutGet
        /// </summary>
        [Fact]
        public void UserStatusLockedOutGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusLockedOutGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusLoggedInActiveGet
        /// </summary>
        [Fact]
        public void UserStatusLoggedInActiveGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusLoggedInActiveGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusLoggedInAllGet
        /// </summary>
        [Fact]
        public void UserStatusLoggedInAllGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusLoggedInAllGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusLoggedInGet
        /// </summary>
        [Fact]
        public void UserStatusLoggedInGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusLoggedInGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusLoggedInInactiveGet
        /// </summary>
        [Fact]
        public void UserStatusLoggedInInactiveGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusLoggedInInactiveGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusLoggedInIpUSERIPGet
        /// </summary>
        [Fact]
        public void UserStatusLoggedInIpUSERIPGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string USERIP = null;
            //var response = instance.UserStatusLoggedInIpUSERIPGet(USERIP);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusLoggedInNameUSERNAMEGet
        /// </summary>
        [Fact]
        public void UserStatusLoggedInNameUSERNAMEGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string USERNAME = null;
            //var response = instance.UserStatusLoggedInNameUSERNAMEGet(USERNAME);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusNameNAMEGet
        /// </summary>
        [Fact]
        public void UserStatusNameNAMEGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string NAME = null;
            //var response = instance.UserStatusNameNAMEGet(NAME);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusPendingGet
        /// </summary>
        [Fact]
        public void UserStatusPendingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusPendingGet();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserStatusUnauthenticatedGet
        /// </summary>
        [Fact]
        public void UserStatusUnauthenticatedGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserStatusUnauthenticatedGet();
            //Assert.IsType<Object>(response);
        }
    }
}
