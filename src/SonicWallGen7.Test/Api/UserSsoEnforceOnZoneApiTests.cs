/*
 * SonicOS API
 *
 * __Swagger Specification for SonicOS APIs__  ___SonicOS support two-factor and bearer token login from SWAGGER only.___  Please follow the following steps to login. > 1. POST \"tfa\" with your username, password, and two-factor code to the firewall. If you are authenticating a username for the first time, please login to GUI and scan the QR code to activate two-factor authentication. > 2. The Bearer Token is returned in response to the \"tfa\" message. Copy the Bearer Token to the \"Authorize\" button. > 3. DELETE \"auth\" to logout of the current session. 
 *
 * The version of the OpenAPI document: 7.0.1
 * Contact: sonicOsApiSupport@SonicWall.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using SonicWallGen7.Client;
using SonicWallGen7.Api;
// uncomment below to import models
//using SonicWallGen7.Model;

namespace SonicWallGen7.Test.Api
{
    /// <summary>
    ///  Class for testing UserSsoEnforceOnZoneApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UserSsoEnforceOnZoneApiTests : IDisposable
    {
        private UserSsoEnforceOnZoneApi instance;

        public UserSsoEnforceOnZoneApiTests()
        {
            instance = new UserSsoEnforceOnZoneApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UserSsoEnforceOnZoneApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' UserSsoEnforceOnZoneApi
            //Assert.IsType<UserSsoEnforceOnZoneApi>(instance);
        }

        /// <summary>
        /// Test UserSsoEnforceOnZonesGet
        /// </summary>
        [Fact]
        public void UserSsoEnforceOnZonesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserSsoEnforceOnZonesGet();
            //Assert.IsType<UserSsoEnforceOnZoneCollection>(response);
        }

        /// <summary>
        /// Test UserSsoEnforceOnZonesNameNAMEDelete
        /// </summary>
        [Fact]
        public void UserSsoEnforceOnZonesNameNAMEDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string NAME = null;
            //var response = instance.UserSsoEnforceOnZonesNameNAMEDelete(NAME);
            //Assert.IsType<ApiStatus>(response);
        }

        /// <summary>
        /// Test UserSsoEnforceOnZonesNameNAMEGet
        /// </summary>
        [Fact]
        public void UserSsoEnforceOnZonesNameNAMEGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string NAME = null;
            //var response = instance.UserSsoEnforceOnZonesNameNAMEGet(NAME);
            //Assert.IsType<UserSsoEnforceOnZoneCollection>(response);
        }

        /// <summary>
        /// Test UserSsoEnforceOnZonesNameNAMEPut
        /// </summary>
        [Fact]
        public void UserSsoEnforceOnZonesNameNAMEPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string NAME = null;
            //UserSsoEnforceOnZoneCollection? userSsoEnforceOnZoneCollection = null;
            //var response = instance.UserSsoEnforceOnZonesNameNAMEPut(NAME, userSsoEnforceOnZoneCollection);
            //Assert.IsType<ApiStatus>(response);
        }

        /// <summary>
        /// Test UserSsoEnforceOnZonesPost
        /// </summary>
        [Fact]
        public void UserSsoEnforceOnZonesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserSsoEnforceOnZoneCollection? userSsoEnforceOnZoneCollection = null;
            //var response = instance.UserSsoEnforceOnZonesPost(userSsoEnforceOnZoneCollection);
            //Assert.IsType<ApiStatus>(response);
        }

        /// <summary>
        /// Test UserSsoEnforceOnZonesPut
        /// </summary>
        [Fact]
        public void UserSsoEnforceOnZonesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserSsoEnforceOnZoneCollection? userSsoEnforceOnZoneCollection = null;
            //var response = instance.UserSsoEnforceOnZonesPut(userSsoEnforceOnZoneCollection);
            //Assert.IsType<ApiStatus>(response);
        }
    }
}
