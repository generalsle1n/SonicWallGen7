/*
 * SonicOS API
 *
 * __Swagger Specification for SonicOS APIs__  ___SonicOS support two-factor and bearer token login from SWAGGER only.___  Please follow the following steps to login. > 1. POST \"tfa\" with your username, password, and two-factor code to the firewall. If you are authenticating a username for the first time, please login to GUI and scan the QR code to activate two-factor authentication. > 2. The Bearer Token is returned in response to the \"tfa\" message. Copy the Bearer Token to the \"Authorize\" button. > 3. DELETE \"auth\" to logout of the current session. 
 *
 * The version of the OpenAPI document: 7.0.1
 * Contact: sonicOsApiSupport@SonicWall.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using SonicWallGen7.Client;
using SonicWallGen7.Api;
// uncomment below to import models
//using SonicWallGen7.Model;

namespace SonicWallGen7.Test.Api
{
    /// <summary>
    ///  Class for testing UserSso3rdPartyApiClientApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UserSso3rdPartyApiClientApiTests : IDisposable
    {
        private UserSso3rdPartyApiClientApi instance;

        public UserSso3rdPartyApiClientApiTests()
        {
            instance = new UserSso3rdPartyApiClientApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UserSso3rdPartyApiClientApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' UserSso3rdPartyApiClientApi
            //Assert.IsType<UserSso3rdPartyApiClientApi>(instance);
        }

        /// <summary>
        /// Test UserSsoThirdPartyApiClientsGet
        /// </summary>
        [Fact]
        public void UserSsoThirdPartyApiClientsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserSsoThirdPartyApiClientsGet();
            //Assert.IsType<UserSso3rdPartyApiClientCollection>(response);
        }

        /// <summary>
        /// Test UserSsoThirdPartyApiClientsNameNAMEDelete
        /// </summary>
        [Fact]
        public void UserSsoThirdPartyApiClientsNameNAMEDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string NAME = null;
            //var response = instance.UserSsoThirdPartyApiClientsNameNAMEDelete(NAME);
            //Assert.IsType<ApiStatus>(response);
        }

        /// <summary>
        /// Test UserSsoThirdPartyApiClientsNameNAMEGet
        /// </summary>
        [Fact]
        public void UserSsoThirdPartyApiClientsNameNAMEGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string NAME = null;
            //var response = instance.UserSsoThirdPartyApiClientsNameNAMEGet(NAME);
            //Assert.IsType<UserSso3rdPartyApiClientCollection>(response);
        }

        /// <summary>
        /// Test UserSsoThirdPartyApiClientsNameNAMEPatch
        /// </summary>
        [Fact]
        public void UserSsoThirdPartyApiClientsNameNAMEPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string NAME = null;
            //UserSso3rdPartyApiClientCollection? userSso3rdPartyApiClientCollection = null;
            //var response = instance.UserSsoThirdPartyApiClientsNameNAMEPatch(NAME, userSso3rdPartyApiClientCollection);
            //Assert.IsType<ApiStatus>(response);
        }

        /// <summary>
        /// Test UserSsoThirdPartyApiClientsNameNAMEPut
        /// </summary>
        [Fact]
        public void UserSsoThirdPartyApiClientsNameNAMEPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string NAME = null;
            //UserSso3rdPartyApiClientCollection? userSso3rdPartyApiClientCollection = null;
            //var response = instance.UserSsoThirdPartyApiClientsNameNAMEPut(NAME, userSso3rdPartyApiClientCollection);
            //Assert.IsType<ApiStatus>(response);
        }

        /// <summary>
        /// Test UserSsoThirdPartyApiClientsPatch
        /// </summary>
        [Fact]
        public void UserSsoThirdPartyApiClientsPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserSso3rdPartyApiClientCollection? userSso3rdPartyApiClientCollection = null;
            //var response = instance.UserSsoThirdPartyApiClientsPatch(userSso3rdPartyApiClientCollection);
            //Assert.IsType<ApiStatus>(response);
        }

        /// <summary>
        /// Test UserSsoThirdPartyApiClientsPost
        /// </summary>
        [Fact]
        public void UserSsoThirdPartyApiClientsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserSso3rdPartyApiClientCollection? userSso3rdPartyApiClientCollection = null;
            //var response = instance.UserSsoThirdPartyApiClientsPost(userSso3rdPartyApiClientCollection);
            //Assert.IsType<ApiStatus>(response);
        }

        /// <summary>
        /// Test UserSsoThirdPartyApiClientsPut
        /// </summary>
        [Fact]
        public void UserSsoThirdPartyApiClientsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserSso3rdPartyApiClientCollection? userSso3rdPartyApiClientCollection = null;
            //var response = instance.UserSsoThirdPartyApiClientsPut(userSso3rdPartyApiClientCollection);
            //Assert.IsType<ApiStatus>(response);
        }
    }
}
