/*
 * SonicOS API
 *
 * __Swagger Specification for SonicOS APIs__  ___SonicOS support two-factor and bearer token login from SWAGGER only.___  Please follow the following steps to login. > 1. POST \"tfa\" with your username, password, and two-factor code to the firewall. If you are authenticating a username for the first time, please login to GUI and scan the QR code to activate two-factor authentication. > 2. The Bearer Token is returned in response to the \"tfa\" message. Copy the Bearer Token to the \"Authorize\" button. > 3. DELETE \"auth\" to logout of the current session. 
 *
 * The version of the OpenAPI document: 7.0.1
 * Contact: sonicOsApiSupport@SonicWall.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SonicWallGen7.Model;
using SonicWallGen7.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SonicWallGen7.Test.Model
{
    /// <summary>
    ///  Class for testing UserGuestUser
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class UserGuestUserTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for UserGuestUser
        //private UserGuestUser instance;

        public UserGuestUserTests()
        {
            // TODO uncomment below to create an instance of UserGuestUser
            //instance = new UserGuestUser();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UserGuestUser
        /// </summary>
        [Fact]
        public void UserGuestUserInstanceTest()
        {
            // TODO uncomment below to test "IsType" UserGuestUser
            //Assert.IsType<UserGuestUser>(instance);
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Uuid'
        /// </summary>
        [Fact]
        public void UuidTest()
        {
            // TODO unit test for the property 'Uuid'
        }

        /// <summary>
        /// Test the property 'Generate'
        /// </summary>
        [Fact]
        public void GenerateTest()
        {
            // TODO unit test for the property 'Generate'
        }

        /// <summary>
        /// Test the property 'Profile'
        /// </summary>
        [Fact]
        public void ProfileTest()
        {
            // TODO unit test for the property 'Profile'
        }

        /// <summary>
        /// Test the property 'Password'
        /// </summary>
        [Fact]
        public void PasswordTest()
        {
            // TODO unit test for the property 'Password'
        }

        /// <summary>
        /// Test the property 'Comment'
        /// </summary>
        [Fact]
        public void CommentTest()
        {
            // TODO unit test for the property 'Comment'
        }

        /// <summary>
        /// Test the property 'Enable'
        /// </summary>
        [Fact]
        public void EnableTest()
        {
            // TODO unit test for the property 'Enable'
        }

        /// <summary>
        /// Test the property 'ActivateOnLogin'
        /// </summary>
        [Fact]
        public void ActivateOnLoginTest()
        {
            // TODO unit test for the property 'ActivateOnLogin'
        }

        /// <summary>
        /// Test the property 'LoginUniqueness'
        /// </summary>
        [Fact]
        public void LoginUniquenessTest()
        {
            // TODO unit test for the property 'LoginUniqueness'
        }

        /// <summary>
        /// Test the property 'PruneOnExpiry'
        /// </summary>
        [Fact]
        public void PruneOnExpiryTest()
        {
            // TODO unit test for the property 'PruneOnExpiry'
        }

        /// <summary>
        /// Test the property 'AccountLifetime'
        /// </summary>
        [Fact]
        public void AccountLifetimeTest()
        {
            // TODO unit test for the property 'AccountLifetime'
        }

        /// <summary>
        /// Test the property 'QuotaCycle'
        /// </summary>
        [Fact]
        public void QuotaCycleTest()
        {
            // TODO unit test for the property 'QuotaCycle'
        }

        /// <summary>
        /// Test the property 'SessionLifetime'
        /// </summary>
        [Fact]
        public void SessionLifetimeTest()
        {
            // TODO unit test for the property 'SessionLifetime'
        }

        /// <summary>
        /// Test the property 'IdleTimeout'
        /// </summary>
        [Fact]
        public void IdleTimeoutTest()
        {
            // TODO unit test for the property 'IdleTimeout'
        }

        /// <summary>
        /// Test the property 'Limit'
        /// </summary>
        [Fact]
        public void LimitTest()
        {
            // TODO unit test for the property 'Limit'
        }
    }
}
