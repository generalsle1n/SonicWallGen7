/*
 * SonicOS API
 *
 * __Swagger Specification for SonicOS APIs__  ___SonicOS support two-factor and bearer token login from SWAGGER only.___  Please follow the following steps to login. > 1. POST \"tfa\" with your username, password, and two-factor code to the firewall. If you are authenticating a username for the first time, please login to GUI and scan the QR code to activate two-factor authentication. > 2. The Bearer Token is returned in response to the \"tfa\" message. Copy the Bearer Token to the \"Authorize\" button. > 3. DELETE \"auth\" to logout of the current session. 
 *
 * The version of the OpenAPI document: 7.0.1
 * Contact: sonicOsApiSupport@SonicWall.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SonicWallGen7.Model;
using SonicWallGen7.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SonicWallGen7.Test.Model
{
    /// <summary>
    ///  Class for testing StandbyTraceStandbyTrace
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class StandbyTraceStandbyTraceTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for StandbyTraceStandbyTrace
        //private StandbyTraceStandbyTrace instance;

        public StandbyTraceStandbyTraceTests()
        {
            // TODO uncomment below to create an instance of StandbyTraceStandbyTrace
            //instance = new StandbyTraceStandbyTrace();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of StandbyTraceStandbyTrace
        /// </summary>
        [Fact]
        public void StandbyTraceStandbyTraceInstanceTest()
        {
            // TODO uncomment below to test "IsType" StandbyTraceStandbyTrace
            //Assert.IsType<StandbyTraceStandbyTrace>(instance);
        }

        /// <summary>
        /// Test the property 'FtpServer'
        /// </summary>
        [Fact]
        public void FtpServerTest()
        {
            // TODO unit test for the property 'FtpServer'
        }

        /// <summary>
        /// Test the property 'BytesToCapture'
        /// </summary>
        [Fact]
        public void BytesToCaptureTest()
        {
            // TODO unit test for the property 'BytesToCapture'
        }

        /// <summary>
        /// Test the property 'FtpPassword'
        /// </summary>
        [Fact]
        public void FtpPasswordTest()
        {
            // TODO unit test for the property 'FtpPassword'
        }

        /// <summary>
        /// Test the property 'FtpLogin'
        /// </summary>
        [Fact]
        public void FtpLoginTest()
        {
            // TODO unit test for the property 'FtpLogin'
        }

        /// <summary>
        /// Test the property 'FtpDirectory'
        /// </summary>
        [Fact]
        public void FtpDirectoryTest()
        {
            // TODO unit test for the property 'FtpDirectory'
        }

        /// <summary>
        /// Test the property 'WrapBuffer'
        /// </summary>
        [Fact]
        public void WrapBufferTest()
        {
            // TODO unit test for the property 'WrapBuffer'
        }

        /// <summary>
        /// Test the property 'Multicast'
        /// </summary>
        [Fact]
        public void MulticastTest()
        {
            // TODO unit test for the property 'Multicast'
        }

        /// <summary>
        /// Test the property 'Iphelper'
        /// </summary>
        [Fact]
        public void IphelperTest()
        {
            // TODO unit test for the property 'Iphelper'
        }

        /// <summary>
        /// Test the property 'Reassembled'
        /// </summary>
        [Fact]
        public void ReassembledTest()
        {
            // TODO unit test for the property 'Reassembled'
        }

        /// <summary>
        /// Test the property 'Fragmented'
        /// </summary>
        [Fact]
        public void FragmentedTest()
        {
            // TODO unit test for the property 'Fragmented'
        }

        /// <summary>
        /// Test the property 'RemoteMirrored'
        /// </summary>
        [Fact]
        public void RemoteMirroredTest()
        {
            // TODO unit test for the property 'RemoteMirrored'
        }

        /// <summary>
        /// Test the property 'Ipsec'
        /// </summary>
        [Fact]
        public void IpsecTest()
        {
            // TODO unit test for the property 'Ipsec'
        }

        /// <summary>
        /// Test the property 'Ssl'
        /// </summary>
        [Fact]
        public void SslTest()
        {
            // TODO unit test for the property 'Ssl'
        }

        /// <summary>
        /// Test the property 'RestorePortsSsl'
        /// </summary>
        [Fact]
        public void RestorePortsSslTest()
        {
            // TODO unit test for the property 'RestorePortsSsl'
        }

        /// <summary>
        /// Test the property 'FtpAutomatic'
        /// </summary>
        [Fact]
        public void FtpAutomaticTest()
        {
            // TODO unit test for the property 'FtpAutomatic'
        }

        /// <summary>
        /// Test the property 'FtpPcapng'
        /// </summary>
        [Fact]
        public void FtpPcapngTest()
        {
            // TODO unit test for the property 'FtpPcapng'
        }

        /// <summary>
        /// Test the property 'PatchedHeader'
        /// </summary>
        [Fact]
        public void PatchedHeaderTest()
        {
            // TODO unit test for the property 'PatchedHeader'
        }

        /// <summary>
        /// Test the property 'FtpHtml'
        /// </summary>
        [Fact]
        public void FtpHtmlTest()
        {
            // TODO unit test for the property 'FtpHtml'
        }

        /// <summary>
        /// Test the property 'FirewallGenerated'
        /// </summary>
        [Fact]
        public void FirewallGeneratedTest()
        {
            // TODO unit test for the property 'FirewallGenerated'
        }

        /// <summary>
        /// Test the property 'Intermediate'
        /// </summary>
        [Fact]
        public void IntermediateTest()
        {
            // TODO unit test for the property 'Intermediate'
        }

        /// <summary>
        /// Test the property 'LdapOverTls'
        /// </summary>
        [Fact]
        public void LdapOverTlsTest()
        {
            // TODO unit test for the property 'LdapOverTls'
        }

        /// <summary>
        /// Test the property 'SsoAgent'
        /// </summary>
        [Fact]
        public void SsoAgentTest()
        {
            // TODO unit test for the property 'SsoAgent'
        }

        /// <summary>
        /// Test the property 'ExcludeManagementHttp'
        /// </summary>
        [Fact]
        public void ExcludeManagementHttpTest()
        {
            // TODO unit test for the property 'ExcludeManagementHttp'
        }

        /// <summary>
        /// Test the property 'ExcludeManagementSnmp'
        /// </summary>
        [Fact]
        public void ExcludeManagementSnmpTest()
        {
            // TODO unit test for the property 'ExcludeManagementSnmp'
        }

        /// <summary>
        /// Test the property 'ExcludeManagementSsh'
        /// </summary>
        [Fact]
        public void ExcludeManagementSshTest()
        {
            // TODO unit test for the property 'ExcludeManagementSsh'
        }

        /// <summary>
        /// Test the property 'ExcludeSyslogServers'
        /// </summary>
        [Fact]
        public void ExcludeSyslogServersTest()
        {
            // TODO unit test for the property 'ExcludeSyslogServers'
        }

        /// <summary>
        /// Test the property 'ExcludeGmsServer'
        /// </summary>
        [Fact]
        public void ExcludeGmsServerTest()
        {
            // TODO unit test for the property 'ExcludeGmsServer'
        }

        /// <summary>
        /// Test the property 'ExcludeEncryptedGms'
        /// </summary>
        [Fact]
        public void ExcludeEncryptedGmsTest()
        {
            // TODO unit test for the property 'ExcludeEncryptedGms'
        }

        /// <summary>
        /// Test the property 'ExcludeInternalTrafficHa'
        /// </summary>
        [Fact]
        public void ExcludeInternalTrafficHaTest()
        {
            // TODO unit test for the property 'ExcludeInternalTrafficHa'
        }

        /// <summary>
        /// Test the property 'ExcludeInternalTrafficSonicpoint'
        /// </summary>
        [Fact]
        public void ExcludeInternalTrafficSonicpointTest()
        {
            // TODO unit test for the property 'ExcludeInternalTrafficSonicpoint'
        }

        /// <summary>
        /// Test the property 'CaptureInterfaces'
        /// </summary>
        [Fact]
        public void CaptureInterfacesTest()
        {
            // TODO unit test for the property 'CaptureInterfaces'
        }

        /// <summary>
        /// Test the property 'CaptureEtherTypes'
        /// </summary>
        [Fact]
        public void CaptureEtherTypesTest()
        {
            // TODO unit test for the property 'CaptureEtherTypes'
        }

        /// <summary>
        /// Test the property 'CaptureIpTypes'
        /// </summary>
        [Fact]
        public void CaptureIpTypesTest()
        {
            // TODO unit test for the property 'CaptureIpTypes'
        }

        /// <summary>
        /// Test the property 'CaptureSourceIps'
        /// </summary>
        [Fact]
        public void CaptureSourceIpsTest()
        {
            // TODO unit test for the property 'CaptureSourceIps'
        }

        /// <summary>
        /// Test the property 'CaptureDestinationIps'
        /// </summary>
        [Fact]
        public void CaptureDestinationIpsTest()
        {
            // TODO unit test for the property 'CaptureDestinationIps'
        }

        /// <summary>
        /// Test the property 'CaptureDestinationPorts'
        /// </summary>
        [Fact]
        public void CaptureDestinationPortsTest()
        {
            // TODO unit test for the property 'CaptureDestinationPorts'
        }

        /// <summary>
        /// Test the property 'CaptureSourcePorts'
        /// </summary>
        [Fact]
        public void CaptureSourcePortsTest()
        {
            // TODO unit test for the property 'CaptureSourcePorts'
        }

        /// <summary>
        /// Test the property 'CaptureBidirectional'
        /// </summary>
        [Fact]
        public void CaptureBidirectionalTest()
        {
            // TODO unit test for the property 'CaptureBidirectional'
        }

        /// <summary>
        /// Test the property 'CaptureForwarded'
        /// </summary>
        [Fact]
        public void CaptureForwardedTest()
        {
            // TODO unit test for the property 'CaptureForwarded'
        }

        /// <summary>
        /// Test the property 'CaptureGenerated'
        /// </summary>
        [Fact]
        public void CaptureGeneratedTest()
        {
            // TODO unit test for the property 'CaptureGenerated'
        }

        /// <summary>
        /// Test the property 'CaptureConsumed'
        /// </summary>
        [Fact]
        public void CaptureConsumedTest()
        {
            // TODO unit test for the property 'CaptureConsumed'
        }

        /// <summary>
        /// Test the property 'CaptureDropped'
        /// </summary>
        [Fact]
        public void CaptureDroppedTest()
        {
            // TODO unit test for the property 'CaptureDropped'
        }

        /// <summary>
        /// Test the property 'CaptureBasedOnFirewallRule'
        /// </summary>
        [Fact]
        public void CaptureBasedOnFirewallRuleTest()
        {
            // TODO unit test for the property 'CaptureBasedOnFirewallRule'
        }

        /// <summary>
        /// Test the property 'DisplayInterfaces'
        /// </summary>
        [Fact]
        public void DisplayInterfacesTest()
        {
            // TODO unit test for the property 'DisplayInterfaces'
        }

        /// <summary>
        /// Test the property 'DisplayEtherTypes'
        /// </summary>
        [Fact]
        public void DisplayEtherTypesTest()
        {
            // TODO unit test for the property 'DisplayEtherTypes'
        }

        /// <summary>
        /// Test the property 'DisplayIpTypes'
        /// </summary>
        [Fact]
        public void DisplayIpTypesTest()
        {
            // TODO unit test for the property 'DisplayIpTypes'
        }

        /// <summary>
        /// Test the property 'DisplaySourceIps'
        /// </summary>
        [Fact]
        public void DisplaySourceIpsTest()
        {
            // TODO unit test for the property 'DisplaySourceIps'
        }

        /// <summary>
        /// Test the property 'DisplayDestinationIps'
        /// </summary>
        [Fact]
        public void DisplayDestinationIpsTest()
        {
            // TODO unit test for the property 'DisplayDestinationIps'
        }

        /// <summary>
        /// Test the property 'DisplayDestinationPorts'
        /// </summary>
        [Fact]
        public void DisplayDestinationPortsTest()
        {
            // TODO unit test for the property 'DisplayDestinationPorts'
        }

        /// <summary>
        /// Test the property 'DisplaySourcePorts'
        /// </summary>
        [Fact]
        public void DisplaySourcePortsTest()
        {
            // TODO unit test for the property 'DisplaySourcePorts'
        }

        /// <summary>
        /// Test the property 'DisplayBidirectional'
        /// </summary>
        [Fact]
        public void DisplayBidirectionalTest()
        {
            // TODO unit test for the property 'DisplayBidirectional'
        }

        /// <summary>
        /// Test the property 'DisplayForwarded'
        /// </summary>
        [Fact]
        public void DisplayForwardedTest()
        {
            // TODO unit test for the property 'DisplayForwarded'
        }

        /// <summary>
        /// Test the property 'DisplayGenerated'
        /// </summary>
        [Fact]
        public void DisplayGeneratedTest()
        {
            // TODO unit test for the property 'DisplayGenerated'
        }

        /// <summary>
        /// Test the property 'DisplayConsumed'
        /// </summary>
        [Fact]
        public void DisplayConsumedTest()
        {
            // TODO unit test for the property 'DisplayConsumed'
        }

        /// <summary>
        /// Test the property 'DisplayDropped'
        /// </summary>
        [Fact]
        public void DisplayDroppedTest()
        {
            // TODO unit test for the property 'DisplayDropped'
        }
    }
}
