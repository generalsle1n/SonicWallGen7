/*
 * SonicOS API
 *
 * __Swagger Specification for SonicOS APIs__  ___SonicOS support two-factor and bearer token login from SWAGGER only.___  Please follow the following steps to login. > 1. POST \"tfa\" with your username, password, and two-factor code to the firewall. If you are authenticating a username for the first time, please login to GUI and scan the QR code to activate two-factor authentication. > 2. The Bearer Token is returned in response to the \"tfa\" message. Copy the Bearer Token to the \"Authorize\" button. > 3. DELETE \"auth\" to logout of the current session. 
 *
 * The version of the OpenAPI document: 7.0.1
 * Contact: sonicOsApiSupport@SonicWall.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SonicWallGen7.Model;
using SonicWallGen7.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SonicWallGen7.Test.Model
{
    /// <summary>
    ///  Class for testing ShowStatusThirdPartyApiClientDetail
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ShowStatusThirdPartyApiClientDetailTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ShowStatusThirdPartyApiClientDetail
        //private ShowStatusThirdPartyApiClientDetail instance;

        public ShowStatusThirdPartyApiClientDetailTests()
        {
            // TODO uncomment below to create an instance of ShowStatusThirdPartyApiClientDetail
            //instance = new ShowStatusThirdPartyApiClientDetail();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ShowStatusThirdPartyApiClientDetail
        /// </summary>
        [Fact]
        public void ShowStatusThirdPartyApiClientDetailInstanceTest()
        {
            // TODO uncomment below to test "IsType" ShowStatusThirdPartyApiClientDetail
            //Assert.IsType<ShowStatusThirdPartyApiClientDetail>(instance);
        }

        /// <summary>
        /// Test the property 'VarClient'
        /// </summary>
        [Fact]
        public void VarClientTest()
        {
            // TODO unit test for the property 'VarClient'
        }

        /// <summary>
        /// Test the property 'IpAddress'
        /// </summary>
        [Fact]
        public void IpAddressTest()
        {
            // TODO unit test for the property 'IpAddress'
        }

        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }

        /// <summary>
        /// Test the property 'TimeSinceLastRequest'
        /// </summary>
        [Fact]
        public void TimeSinceLastRequestTest()
        {
            // TODO unit test for the property 'TimeSinceLastRequest'
        }

        /// <summary>
        /// Test the property 'TotalRequestsReceived'
        /// </summary>
        [Fact]
        public void TotalRequestsReceivedTest()
        {
            // TODO unit test for the property 'TotalRequestsReceived'
        }

        /// <summary>
        /// Test the property 'IgnoredRequests'
        /// </summary>
        [Fact]
        public void IgnoredRequestsTest()
        {
            // TODO unit test for the property 'IgnoredRequests'
        }

        /// <summary>
        /// Test the property 'RequestsThatFaieldAuth'
        /// </summary>
        [Fact]
        public void RequestsThatFaieldAuthTest()
        {
            // TODO unit test for the property 'RequestsThatFaieldAuth'
        }

        /// <summary>
        /// Test the property 'TotalPostRequestsReceived'
        /// </summary>
        [Fact]
        public void TotalPostRequestsReceivedTest()
        {
            // TODO unit test for the property 'TotalPostRequestsReceived'
        }

        /// <summary>
        /// Test the property 'BadPostRequestsReceived'
        /// </summary>
        [Fact]
        public void BadPostRequestsReceivedTest()
        {
            // TODO unit test for the property 'BadPostRequestsReceived'
        }

        /// <summary>
        /// Test the property 'TotalDeleteRequestsReceived'
        /// </summary>
        [Fact]
        public void TotalDeleteRequestsReceivedTest()
        {
            // TODO unit test for the property 'TotalDeleteRequestsReceived'
        }

        /// <summary>
        /// Test the property 'BadDeleteRequestsReceived'
        /// </summary>
        [Fact]
        public void BadDeleteRequestsReceivedTest()
        {
            // TODO unit test for the property 'BadDeleteRequestsReceived'
        }

        /// <summary>
        /// Test the property 'TotalOptionsRequestsReceived'
        /// </summary>
        [Fact]
        public void TotalOptionsRequestsReceivedTest()
        {
            // TODO unit test for the property 'TotalOptionsRequestsReceived'
        }

        /// <summary>
        /// Test the property 'BadOptionsRequestsReceived'
        /// </summary>
        [Fact]
        public void BadOptionsRequestsReceivedTest()
        {
            // TODO unit test for the property 'BadOptionsRequestsReceived'
        }

        /// <summary>
        /// Test the property 'OtherUnsupportedRequests'
        /// </summary>
        [Fact]
        public void OtherUnsupportedRequestsTest()
        {
            // TODO unit test for the property 'OtherUnsupportedRequests'
        }

        /// <summary>
        /// Test the property 'SuccessfulUserLogins'
        /// </summary>
        [Fact]
        public void SuccessfulUserLoginsTest()
        {
            // TODO unit test for the property 'SuccessfulUserLogins'
        }

        /// <summary>
        /// Test the property 'TimesSameUserWasAlreadyLoggedIn'
        /// </summary>
        [Fact]
        public void TimesSameUserWasAlreadyLoggedInTest()
        {
            // TODO unit test for the property 'TimesSameUserWasAlreadyLoggedIn'
        }

        /// <summary>
        /// Test the property 'FailedUserLogins'
        /// </summary>
        [Fact]
        public void FailedUserLoginsTest()
        {
            // TODO unit test for the property 'FailedUserLogins'
        }

        /// <summary>
        /// Test the property 'UserLogouts'
        /// </summary>
        [Fact]
        public void UserLogoutsTest()
        {
            // TODO unit test for the property 'UserLogouts'
        }

        /// <summary>
        /// Test the property 'UsersNotFoundErrorsWithDeleteRequests'
        /// </summary>
        [Fact]
        public void UsersNotFoundErrorsWithDeleteRequestsTest()
        {
            // TODO unit test for the property 'UsersNotFoundErrorsWithDeleteRequests'
        }
    }
}
