/*
 * SonicOS API
 *
 * __Swagger Specification for SonicOS APIs__  ___SonicOS support two-factor and bearer token login from SWAGGER only.___  Please follow the following steps to login. > 1. POST \"tfa\" with your username, password, and two-factor code to the firewall. If you are authenticating a username for the first time, please login to GUI and scan the QR code to activate two-factor authentication. > 2. The Bearer Token is returned in response to the \"tfa\" message. Copy the Bearer Token to the \"Authorize\" button. > 3. DELETE \"auth\" to logout of the current session. 
 *
 * The version of the OpenAPI document: 7.0.1
 * Contact: sonicOsApiSupport@SonicWall.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SonicWallGen7.Model;
using SonicWallGen7.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SonicWallGen7.Test.Model
{
    /// <summary>
    ///  Class for testing AccessRuleIpv4Ipv4
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class AccessRuleIpv4Ipv4Tests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for AccessRuleIpv4Ipv4
        //private AccessRuleIpv4Ipv4 instance;

        public AccessRuleIpv4Ipv4Tests()
        {
            // TODO uncomment below to create an instance of AccessRuleIpv4Ipv4
            //instance = new AccessRuleIpv4Ipv4();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AccessRuleIpv4Ipv4
        /// </summary>
        [Fact]
        public void AccessRuleIpv4Ipv4InstanceTest()
        {
            // TODO uncomment below to test "IsType" AccessRuleIpv4Ipv4
            //Assert.IsType<AccessRuleIpv4Ipv4>(instance);
        }

        /// <summary>
        /// Test the property 'From'
        /// </summary>
        [Fact]
        public void FromTest()
        {
            // TODO unit test for the property 'From'
        }

        /// <summary>
        /// Test the property 'To'
        /// </summary>
        [Fact]
        public void ToTest()
        {
            // TODO unit test for the property 'To'
        }

        /// <summary>
        /// Test the property 'Action'
        /// </summary>
        [Fact]
        public void ActionTest()
        {
            // TODO unit test for the property 'Action'
        }

        /// <summary>
        /// Test the property 'Source'
        /// </summary>
        [Fact]
        public void SourceTest()
        {
            // TODO unit test for the property 'Source'
        }

        /// <summary>
        /// Test the property 'Service'
        /// </summary>
        [Fact]
        public void ServiceTest()
        {
            // TODO unit test for the property 'Service'
        }

        /// <summary>
        /// Test the property 'Destination'
        /// </summary>
        [Fact]
        public void DestinationTest()
        {
            // TODO unit test for the property 'Destination'
        }

        /// <summary>
        /// Test the property 'Schedule'
        /// </summary>
        [Fact]
        public void ScheduleTest()
        {
            // TODO unit test for the property 'Schedule'
        }

        /// <summary>
        /// Test the property 'Users'
        /// </summary>
        [Fact]
        public void UsersTest()
        {
            // TODO unit test for the property 'Users'
        }

        /// <summary>
        /// Test the property 'Uuid'
        /// </summary>
        [Fact]
        public void UuidTest()
        {
            // TODO unit test for the property 'Uuid'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Comment'
        /// </summary>
        [Fact]
        public void CommentTest()
        {
            // TODO unit test for the property 'Comment'
        }

        /// <summary>
        /// Test the property 'Enable'
        /// </summary>
        [Fact]
        public void EnableTest()
        {
            // TODO unit test for the property 'Enable'
        }

        /// <summary>
        /// Test the property 'AutoRule'
        /// </summary>
        [Fact]
        public void AutoRuleTest()
        {
            // TODO unit test for the property 'AutoRule'
        }

        /// <summary>
        /// Test the property 'Reflexive'
        /// </summary>
        [Fact]
        public void ReflexiveTest()
        {
            // TODO unit test for the property 'Reflexive'
        }

        /// <summary>
        /// Test the property 'MaxConnections'
        /// </summary>
        [Fact]
        public void MaxConnectionsTest()
        {
            // TODO unit test for the property 'MaxConnections'
        }

        /// <summary>
        /// Test the property 'Logging'
        /// </summary>
        [Fact]
        public void LoggingTest()
        {
            // TODO unit test for the property 'Logging'
        }

        /// <summary>
        /// Test the property 'Sip'
        /// </summary>
        [Fact]
        public void SipTest()
        {
            // TODO unit test for the property 'Sip'
        }

        /// <summary>
        /// Test the property 'H323'
        /// </summary>
        [Fact]
        public void H323Test()
        {
            // TODO unit test for the property 'H323'
        }

        /// <summary>
        /// Test the property 'Management'
        /// </summary>
        [Fact]
        public void ManagementTest()
        {
            // TODO unit test for the property 'Management'
        }

        /// <summary>
        /// Test the property 'PacketMonitoring'
        /// </summary>
        [Fact]
        public void PacketMonitoringTest()
        {
            // TODO unit test for the property 'PacketMonitoring'
        }

        /// <summary>
        /// Test the property 'PacketDissectionFilter'
        /// </summary>
        [Fact]
        public void PacketDissectionFilterTest()
        {
            // TODO unit test for the property 'PacketDissectionFilter'
        }

        /// <summary>
        /// Test the property 'Priority'
        /// </summary>
        [Fact]
        public void PriorityTest()
        {
            // TODO unit test for the property 'Priority'
        }

        /// <summary>
        /// Test the property 'Tcp'
        /// </summary>
        [Fact]
        public void TcpTest()
        {
            // TODO unit test for the property 'Tcp'
        }

        /// <summary>
        /// Test the property 'Udp'
        /// </summary>
        [Fact]
        public void UdpTest()
        {
            // TODO unit test for the property 'Udp'
        }

        /// <summary>
        /// Test the property 'Fragments'
        /// </summary>
        [Fact]
        public void FragmentsTest()
        {
            // TODO unit test for the property 'Fragments'
        }

        /// <summary>
        /// Test the property 'BotnetFilter'
        /// </summary>
        [Fact]
        public void BotnetFilterTest()
        {
            // TODO unit test for the property 'BotnetFilter'
        }

        /// <summary>
        /// Test the property 'ConnectionLimit'
        /// </summary>
        [Fact]
        public void ConnectionLimitTest()
        {
            // TODO unit test for the property 'ConnectionLimit'
        }

        /// <summary>
        /// Test the property 'Dpi'
        /// </summary>
        [Fact]
        public void DpiTest()
        {
            // TODO unit test for the property 'Dpi'
        }

        /// <summary>
        /// Test the property 'DpiSsl'
        /// </summary>
        [Fact]
        public void DpiSslTest()
        {
            // TODO unit test for the property 'DpiSsl'
        }

        /// <summary>
        /// Test the property 'FlowReporting'
        /// </summary>
        [Fact]
        public void FlowReportingTest()
        {
            // TODO unit test for the property 'FlowReporting'
        }

        /// <summary>
        /// Test the property 'GeoIpFilter'
        /// </summary>
        [Fact]
        public void GeoIpFilterTest()
        {
            // TODO unit test for the property 'GeoIpFilter'
        }

        /// <summary>
        /// Test the property 'Block'
        /// </summary>
        [Fact]
        public void BlockTest()
        {
            // TODO unit test for the property 'Block'
        }

        /// <summary>
        /// Test the property 'QualityOfService'
        /// </summary>
        [Fact]
        public void QualityOfServiceTest()
        {
            // TODO unit test for the property 'QualityOfService'
        }

        /// <summary>
        /// Test the property 'CosOverride'
        /// </summary>
        [Fact]
        public void CosOverrideTest()
        {
            // TODO unit test for the property 'CosOverride'
        }

        /// <summary>
        /// Test the property 'BandwidthManagement'
        /// </summary>
        [Fact]
        public void BandwidthManagementTest()
        {
            // TODO unit test for the property 'BandwidthManagement'
        }

        /// <summary>
        /// Test the property 'Ticket'
        /// </summary>
        [Fact]
        public void TicketTest()
        {
            // TODO unit test for the property 'Ticket'
        }

        /// <summary>
        /// Test the property 'SingleSignOn'
        /// </summary>
        [Fact]
        public void SingleSignOnTest()
        {
            // TODO unit test for the property 'SingleSignOn'
        }

        /// <summary>
        /// Test the property 'RedirectUnauthenticatedUsersToLogIn'
        /// </summary>
        [Fact]
        public void RedirectUnauthenticatedUsersToLogInTest()
        {
            // TODO unit test for the property 'RedirectUnauthenticatedUsersToLogIn'
        }

        /// <summary>
        /// Test the property 'BlockTrafficForSingleSignOn'
        /// </summary>
        [Fact]
        public void BlockTrafficForSingleSignOnTest()
        {
            // TODO unit test for the property 'BlockTrafficForSingleSignOn'
        }
    }
}
