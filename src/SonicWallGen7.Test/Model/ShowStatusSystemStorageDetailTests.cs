/*
 * SonicOS API
 *
 * __Swagger Specification for SonicOS APIs__  ___SonicOS support two-factor and bearer token login from SWAGGER only.___  Please follow the following steps to login. > 1. POST \"tfa\" with your username, password, and two-factor code to the firewall. If you are authenticating a username for the first time, please login to GUI and scan the QR code to activate two-factor authentication. > 2. The Bearer Token is returned in response to the \"tfa\" message. Copy the Bearer Token to the \"Authorize\" button. > 3. DELETE \"auth\" to logout of the current session. 
 *
 * The version of the OpenAPI document: 7.0.1
 * Contact: sonicOsApiSupport@SonicWall.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SonicWallGen7.Model;
using SonicWallGen7.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SonicWallGen7.Test.Model
{
    /// <summary>
    ///  Class for testing ShowStatusSystemStorageDetail
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ShowStatusSystemStorageDetailTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ShowStatusSystemStorageDetail
        //private ShowStatusSystemStorageDetail instance;

        public ShowStatusSystemStorageDetailTests()
        {
            // TODO uncomment below to create an instance of ShowStatusSystemStorageDetail
            //instance = new ShowStatusSystemStorageDetail();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ShowStatusSystemStorageDetail
        /// </summary>
        [Fact]
        public void ShowStatusSystemStorageDetailInstanceTest()
        {
            // TODO uncomment below to test "IsType" ShowStatusSystemStorageDetail
            //Assert.IsType<ShowStatusSystemStorageDetail>(instance);
        }

        /// <summary>
        /// Test the property 'ExtendedStorageEnabled'
        /// </summary>
        [Fact]
        public void ExtendedStorageEnabledTest()
        {
            // TODO unit test for the property 'ExtendedStorageEnabled'
        }

        /// <summary>
        /// Test the property 'PrimaryStorageMounted'
        /// </summary>
        [Fact]
        public void PrimaryStorageMountedTest()
        {
            // TODO unit test for the property 'PrimaryStorageMounted'
        }

        /// <summary>
        /// Test the property 'ExtendedStorageMounted'
        /// </summary>
        [Fact]
        public void ExtendedStorageMountedTest()
        {
            // TODO unit test for the property 'ExtendedStorageMounted'
        }

        /// <summary>
        /// Test the property 'ExtendedStorageDeviceNumber'
        /// </summary>
        [Fact]
        public void ExtendedStorageDeviceNumberTest()
        {
            // TODO unit test for the property 'ExtendedStorageDeviceNumber'
        }

        /// <summary>
        /// Test the property 'LogsOnWhichStorageDevice'
        /// </summary>
        [Fact]
        public void LogsOnWhichStorageDeviceTest()
        {
            // TODO unit test for the property 'LogsOnWhichStorageDevice'
        }

        /// <summary>
        /// Test the property 'LogsOnStorageEnabled'
        /// </summary>
        [Fact]
        public void LogsOnStorageEnabledTest()
        {
            // TODO unit test for the property 'LogsOnStorageEnabled'
        }

        /// <summary>
        /// Test the property 'PrimaryStorageSn'
        /// </summary>
        [Fact]
        public void PrimaryStorageSnTest()
        {
            // TODO unit test for the property 'PrimaryStorageSn'
        }

        /// <summary>
        /// Test the property 'ExtendedStorageSn'
        /// </summary>
        [Fact]
        public void ExtendedStorageSnTest()
        {
            // TODO unit test for the property 'ExtendedStorageSn'
        }

        /// <summary>
        /// Test the property 'PrimaryStorageTotalSize'
        /// </summary>
        [Fact]
        public void PrimaryStorageTotalSizeTest()
        {
            // TODO unit test for the property 'PrimaryStorageTotalSize'
        }

        /// <summary>
        /// Test the property 'PrimaryStorageUsed'
        /// </summary>
        [Fact]
        public void PrimaryStorageUsedTest()
        {
            // TODO unit test for the property 'PrimaryStorageUsed'
        }

        /// <summary>
        /// Test the property 'PrimaryStorageFree'
        /// </summary>
        [Fact]
        public void PrimaryStorageFreeTest()
        {
            // TODO unit test for the property 'PrimaryStorageFree'
        }

        /// <summary>
        /// Test the property 'ExtendedStorageTotalSize'
        /// </summary>
        [Fact]
        public void ExtendedStorageTotalSizeTest()
        {
            // TODO unit test for the property 'ExtendedStorageTotalSize'
        }

        /// <summary>
        /// Test the property 'ExtendedStorageUsed'
        /// </summary>
        [Fact]
        public void ExtendedStorageUsedTest()
        {
            // TODO unit test for the property 'ExtendedStorageUsed'
        }

        /// <summary>
        /// Test the property 'ExtendedStorageFree'
        /// </summary>
        [Fact]
        public void ExtendedStorageFreeTest()
        {
            // TODO unit test for the property 'ExtendedStorageFree'
        }

        /// <summary>
        /// Test the property 'PrimaryStorageMountStatus'
        /// </summary>
        [Fact]
        public void PrimaryStorageMountStatusTest()
        {
            // TODO unit test for the property 'PrimaryStorageMountStatus'
        }

        /// <summary>
        /// Test the property 'ExtendedStorageMountStatus'
        /// </summary>
        [Fact]
        public void ExtendedStorageMountStatusTest()
        {
            // TODO unit test for the property 'ExtendedStorageMountStatus'
        }

        /// <summary>
        /// Test the property 'PrimaryStorageSizeStatus'
        /// </summary>
        [Fact]
        public void PrimaryStorageSizeStatusTest()
        {
            // TODO unit test for the property 'PrimaryStorageSizeStatus'
        }

        /// <summary>
        /// Test the property 'ExtendedStorageSizeStatus'
        /// </summary>
        [Fact]
        public void ExtendedStorageSizeStatusTest()
        {
            // TODO unit test for the property 'ExtendedStorageSizeStatus'
        }

        /// <summary>
        /// Test the property 'PrimaryStorageAssociation'
        /// </summary>
        [Fact]
        public void PrimaryStorageAssociationTest()
        {
            // TODO unit test for the property 'PrimaryStorageAssociation'
        }

        /// <summary>
        /// Test the property 'ExtendedStorageAssociation'
        /// </summary>
        [Fact]
        public void ExtendedStorageAssociationTest()
        {
            // TODO unit test for the property 'ExtendedStorageAssociation'
        }

        /// <summary>
        /// Test the property 'PrimaryStorageAuthCode'
        /// </summary>
        [Fact]
        public void PrimaryStorageAuthCodeTest()
        {
            // TODO unit test for the property 'PrimaryStorageAuthCode'
        }

        /// <summary>
        /// Test the property 'ExtendedStorageAuthCode'
        /// </summary>
        [Fact]
        public void ExtendedStorageAuthCodeTest()
        {
            // TODO unit test for the property 'ExtendedStorageAuthCode'
        }

        /// <summary>
        /// Test the property 'SystemDataSize'
        /// </summary>
        [Fact]
        public void SystemDataSizeTest()
        {
            // TODO unit test for the property 'SystemDataSize'
        }

        /// <summary>
        /// Test the property 'DiagnosticDataSize'
        /// </summary>
        [Fact]
        public void DiagnosticDataSizeTest()
        {
            // TODO unit test for the property 'DiagnosticDataSize'
        }

        /// <summary>
        /// Test the property 'PrimaryLogsSize'
        /// </summary>
        [Fact]
        public void PrimaryLogsSizeTest()
        {
            // TODO unit test for the property 'PrimaryLogsSize'
        }

        /// <summary>
        /// Test the property 'ExtendedLogsSize'
        /// </summary>
        [Fact]
        public void ExtendedLogsSizeTest()
        {
            // TODO unit test for the property 'ExtendedLogsSize'
        }

        /// <summary>
        /// Test the property 'PrimaryConfigurationBackupSize'
        /// </summary>
        [Fact]
        public void PrimaryConfigurationBackupSizeTest()
        {
            // TODO unit test for the property 'PrimaryConfigurationBackupSize'
        }

        /// <summary>
        /// Test the property 'ExtendedConfigurationBackupSize'
        /// </summary>
        [Fact]
        public void ExtendedConfigurationBackupSizeTest()
        {
            // TODO unit test for the property 'ExtendedConfigurationBackupSize'
        }

        /// <summary>
        /// Test the property 'PrimaryCaptureAtpReports'
        /// </summary>
        [Fact]
        public void PrimaryCaptureAtpReportsTest()
        {
            // TODO unit test for the property 'PrimaryCaptureAtpReports'
        }

        /// <summary>
        /// Test the property 'ExtendedCaptureAtpReports'
        /// </summary>
        [Fact]
        public void ExtendedCaptureAtpReportsTest()
        {
            // TODO unit test for the property 'ExtendedCaptureAtpReports'
        }

        /// <summary>
        /// Test the property 'PrimaryApplicationFlowReports'
        /// </summary>
        [Fact]
        public void PrimaryApplicationFlowReportsTest()
        {
            // TODO unit test for the property 'PrimaryApplicationFlowReports'
        }

        /// <summary>
        /// Test the property 'ExtendedApplicationFlowReports'
        /// </summary>
        [Fact]
        public void ExtendedApplicationFlowReportsTest()
        {
            // TODO unit test for the property 'ExtendedApplicationFlowReports'
        }

        /// <summary>
        /// Test the property 'PrimaryPacketCaptures'
        /// </summary>
        [Fact]
        public void PrimaryPacketCapturesTest()
        {
            // TODO unit test for the property 'PrimaryPacketCaptures'
        }

        /// <summary>
        /// Test the property 'ExtendedPacketCaptures'
        /// </summary>
        [Fact]
        public void ExtendedPacketCapturesTest()
        {
            // TODO unit test for the property 'ExtendedPacketCaptures'
        }
    }
}
