/*
 * SonicOS API
 *
 * __Swagger Specification for SonicOS APIs__  ___SonicOS support two-factor and bearer token login from SWAGGER only.___  Please follow the following steps to login. > 1. POST \"tfa\" with your username, password, and two-factor code to the firewall. If you are authenticating a username for the first time, please login to GUI and scan the QR code to activate two-factor authentication. > 2. The Bearer Token is returned in response to the \"tfa\" message. Copy the Bearer Token to the \"Authorize\" button. > 3. DELETE \"auth\" to logout of the current session. 
 *
 * The version of the OpenAPI document: 7.0.1
 * Contact: sonicOsApiSupport@SonicWall.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SonicWallGen7.Model;
using SonicWallGen7.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SonicWallGen7.Test.Model
{
    /// <summary>
    ///  Class for testing ShowStatusSystemSecurityDetail
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ShowStatusSystemSecurityDetailTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ShowStatusSystemSecurityDetail
        //private ShowStatusSystemSecurityDetail instance;

        public ShowStatusSystemSecurityDetailTests()
        {
            // TODO uncomment below to create an instance of ShowStatusSystemSecurityDetail
            //instance = new ShowStatusSystemSecurityDetail();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ShowStatusSystemSecurityDetail
        /// </summary>
        [Fact]
        public void ShowStatusSystemSecurityDetailInstanceTest()
        {
            // TODO uncomment below to test "IsType" ShowStatusSystemSecurityDetail
            //Assert.IsType<ShowStatusSystemSecurityDetail>(instance);
        }

        /// <summary>
        /// Test the property 'NoRegistNodesUsers'
        /// </summary>
        [Fact]
        public void NoRegistNodesUsersTest()
        {
            // TODO unit test for the property 'NoRegistNodesUsers'
        }

        /// <summary>
        /// Test the property 'NoRegistSslVpnNodesUsers'
        /// </summary>
        [Fact]
        public void NoRegistSslVpnNodesUsersTest()
        {
            // TODO unit test for the property 'NoRegistSslVpnNodesUsers'
        }

        /// <summary>
        /// Test the property 'NoRegistVirtualAssistNodesUsers'
        /// </summary>
        [Fact]
        public void NoRegistVirtualAssistNodesUsersTest()
        {
            // TODO unit test for the property 'NoRegistVirtualAssistNodesUsers'
        }

        /// <summary>
        /// Test the property 'RegistrationStatus'
        /// </summary>
        [Fact]
        public void RegistrationStatusTest()
        {
            // TODO unit test for the property 'RegistrationStatus'
        }

        /// <summary>
        /// Test the property 'NodesUsers'
        /// </summary>
        [Fact]
        public void NodesUsersTest()
        {
            // TODO unit test for the property 'NodesUsers'
        }

        /// <summary>
        /// Test the property 'SslVpnNodesUsers'
        /// </summary>
        [Fact]
        public void SslVpnNodesUsersTest()
        {
            // TODO unit test for the property 'SslVpnNodesUsers'
        }

        /// <summary>
        /// Test the property 'VirtualAssistNodesUsers'
        /// </summary>
        [Fact]
        public void VirtualAssistNodesUsersTest()
        {
            // TODO unit test for the property 'VirtualAssistNodesUsers'
        }

        /// <summary>
        /// Test the property 'EndPointControl'
        /// </summary>
        [Fact]
        public void EndPointControlTest()
        {
            // TODO unit test for the property 'EndPointControl'
        }

        /// <summary>
        /// Test the property 'Vpn'
        /// </summary>
        [Fact]
        public void VpnTest()
        {
            // TODO unit test for the property 'Vpn'
        }

        /// <summary>
        /// Test the property 'GlobalVpnClient'
        /// </summary>
        [Fact]
        public void GlobalVpnClientTest()
        {
            // TODO unit test for the property 'GlobalVpnClient'
        }

        /// <summary>
        /// Test the property 'CfsContentFilter'
        /// </summary>
        [Fact]
        public void CfsContentFilterTest()
        {
            // TODO unit test for the property 'CfsContentFilter'
        }

        /// <summary>
        /// Test the property 'ExpandedFeatureSet'
        /// </summary>
        [Fact]
        public void ExpandedFeatureSetTest()
        {
            // TODO unit test for the property 'ExpandedFeatureSet'
        }

        /// <summary>
        /// Test the property 'EndpointSecurity'
        /// </summary>
        [Fact]
        public void EndpointSecurityTest()
        {
            // TODO unit test for the property 'EndpointSecurity'
        }

        /// <summary>
        /// Test the property 'GatewayAntiVirus'
        /// </summary>
        [Fact]
        public void GatewayAntiVirusTest()
        {
            // TODO unit test for the property 'GatewayAntiVirus'
        }

        /// <summary>
        /// Test the property 'CaptureAtp'
        /// </summary>
        [Fact]
        public void CaptureAtpTest()
        {
            // TODO unit test for the property 'CaptureAtp'
        }

        /// <summary>
        /// Test the property 'AntiSpyware'
        /// </summary>
        [Fact]
        public void AntiSpywareTest()
        {
            // TODO unit test for the property 'AntiSpyware'
        }

        /// <summary>
        /// Test the property 'IntrusionPrevention'
        /// </summary>
        [Fact]
        public void IntrusionPreventionTest()
        {
            // TODO unit test for the property 'IntrusionPrevention'
        }

        /// <summary>
        /// Test the property 'AppControl'
        /// </summary>
        [Fact]
        public void AppControlTest()
        {
            // TODO unit test for the property 'AppControl'
        }

        /// <summary>
        /// Test the property 'AppVisualization'
        /// </summary>
        [Fact]
        public void AppVisualizationTest()
        {
            // TODO unit test for the property 'AppVisualization'
        }

        /// <summary>
        /// Test the property 'EMailFilter'
        /// </summary>
        [Fact]
        public void EMailFilterTest()
        {
            // TODO unit test for the property 'EMailFilter'
        }

        /// <summary>
        /// Test the property 'AntiSpam'
        /// </summary>
        [Fact]
        public void AntiSpamTest()
        {
            // TODO unit test for the property 'AntiSpam'
        }

        /// <summary>
        /// Test the property 'ViewPoint'
        /// </summary>
        [Fact]
        public void ViewPointTest()
        {
            // TODO unit test for the property 'ViewPoint'
        }

        /// <summary>
        /// Test the property 'Analyzer'
        /// </summary>
        [Fact]
        public void AnalyzerTest()
        {
            // TODO unit test for the property 'Analyzer'
        }

        /// <summary>
        /// Test the property 'DpiSsl'
        /// </summary>
        [Fact]
        public void DpiSslTest()
        {
            // TODO unit test for the property 'DpiSsl'
        }

        /// <summary>
        /// Test the property 'DpiSsh'
        /// </summary>
        [Fact]
        public void DpiSshTest()
        {
            // TODO unit test for the property 'DpiSsh'
        }

        /// <summary>
        /// Test the property 'WanAcceleration'
        /// </summary>
        [Fact]
        public void WanAccelerationTest()
        {
            // TODO unit test for the property 'WanAcceleration'
        }

        /// <summary>
        /// Test the property 'WxacAcceleration'
        /// </summary>
        [Fact]
        public void WxacAccelerationTest()
        {
            // TODO unit test for the property 'WxacAcceleration'
        }

        /// <summary>
        /// Test the property 'Botnet'
        /// </summary>
        [Fact]
        public void BotnetTest()
        {
            // TODO unit test for the property 'Botnet'
        }
    }
}
