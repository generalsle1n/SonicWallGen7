/*
 * SonicOS API
 *
 * __Swagger Specification for SonicOS APIs__  ___SonicOS support two-factor and bearer token login from SWAGGER only.___  Please follow the following steps to login. > 1. POST \"tfa\" with your username, password, and two-factor code to the firewall. If you are authenticating a username for the first time, please login to GUI and scan the QR code to activate two-factor authentication. > 2. The Bearer Token is returned in response to the \"tfa\" message. Copy the Bearer Token to the \"Authorize\" button. > 3. DELETE \"auth\" to logout of the current session. 
 *
 * The version of the OpenAPI document: 7.0.1
 * Contact: sonicOsApiSupport@SonicWall.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SonicWallGen7.Model;
using SonicWallGen7.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SonicWallGen7.Test.Model
{
    /// <summary>
    ///  Class for testing ShowStatusSsoAgentDetail
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ShowStatusSsoAgentDetailTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ShowStatusSsoAgentDetail
        //private ShowStatusSsoAgentDetail instance;

        public ShowStatusSsoAgentDetailTests()
        {
            // TODO uncomment below to create an instance of ShowStatusSsoAgentDetail
            //instance = new ShowStatusSsoAgentDetail();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ShowStatusSsoAgentDetail
        /// </summary>
        [Fact]
        public void ShowStatusSsoAgentDetailInstanceTest()
        {
            // TODO uncomment below to test "IsType" ShowStatusSsoAgentDetail
            //Assert.IsType<ShowStatusSsoAgentDetail>(instance);
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Port'
        /// </summary>
        [Fact]
        public void PortTest()
        {
            // TODO unit test for the property 'Port'
        }

        /// <summary>
        /// Test the property 'IpAddress'
        /// </summary>
        [Fact]
        public void IpAddressTest()
        {
            // TODO unit test for the property 'IpAddress'
        }

        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }

        /// <summary>
        /// Test the property 'UserIdentificationMechanisms'
        /// </summary>
        [Fact]
        public void UserIdentificationMechanismsTest()
        {
            // TODO unit test for the property 'UserIdentificationMechanisms'
        }

        /// <summary>
        /// Test the property 'UserRequests'
        /// </summary>
        [Fact]
        public void UserRequestsTest()
        {
            // TODO unit test for the property 'UserRequests'
        }

        /// <summary>
        /// Test the property 'UserReplies'
        /// </summary>
        [Fact]
        public void UserRepliesTest()
        {
            // TODO unit test for the property 'UserReplies'
        }

        /// <summary>
        /// Test the property 'MultiUserRequests'
        /// </summary>
        [Fact]
        public void MultiUserRequestsTest()
        {
            // TODO unit test for the property 'MultiUserRequests'
        }

        /// <summary>
        /// Test the property 'MultiUserReplies'
        /// </summary>
        [Fact]
        public void MultiUserRepliesTest()
        {
            // TODO unit test for the property 'MultiUserReplies'
        }

        /// <summary>
        /// Test the property 'UsersPerMultiUserRequestAverage'
        /// </summary>
        [Fact]
        public void UsersPerMultiUserRequestAverageTest()
        {
            // TODO unit test for the property 'UsersPerMultiUserRequestAverage'
        }

        /// <summary>
        /// Test the property 'UsersPerMultiUserRequestMax'
        /// </summary>
        [Fact]
        public void UsersPerMultiUserRequestMaxTest()
        {
            // TODO unit test for the property 'UsersPerMultiUserRequestMax'
        }

        /// <summary>
        /// Test the property 'SsoPingRequests'
        /// </summary>
        [Fact]
        public void SsoPingRequestsTest()
        {
            // TODO unit test for the property 'SsoPingRequests'
        }

        /// <summary>
        /// Test the property 'SsoPingReplies'
        /// </summary>
        [Fact]
        public void SsoPingRepliesTest()
        {
            // TODO unit test for the property 'SsoPingReplies'
        }

        /// <summary>
        /// Test the property 'RepliesWithError'
        /// </summary>
        [Fact]
        public void RepliesWithErrorTest()
        {
            // TODO unit test for the property 'RepliesWithError'
        }

        /// <summary>
        /// Test the property 'InvalidReplies'
        /// </summary>
        [Fact]
        public void InvalidRepliesTest()
        {
            // TODO unit test for the property 'InvalidReplies'
        }

        /// <summary>
        /// Test the property 'Timeouts'
        /// </summary>
        [Fact]
        public void TimeoutsTest()
        {
            // TODO unit test for the property 'Timeouts'
        }

        /// <summary>
        /// Test the property 'LateReplies'
        /// </summary>
        [Fact]
        public void LateRepliesTest()
        {
            // TODO unit test for the property 'LateReplies'
        }

        /// <summary>
        /// Test the property 'MaxOutstandingRequests'
        /// </summary>
        [Fact]
        public void MaxOutstandingRequestsTest()
        {
            // TODO unit test for the property 'MaxOutstandingRequests'
        }

        /// <summary>
        /// Test the property 'SsoPingResponseTimeAverage'
        /// </summary>
        [Fact]
        public void SsoPingResponseTimeAverageTest()
        {
            // TODO unit test for the property 'SsoPingResponseTimeAverage'
        }

        /// <summary>
        /// Test the property 'SsoPingResponseTimeMax'
        /// </summary>
        [Fact]
        public void SsoPingResponseTimeMaxTest()
        {
            // TODO unit test for the property 'SsoPingResponseTimeMax'
        }

        /// <summary>
        /// Test the property 'UserIdRequestTimeAvg'
        /// </summary>
        [Fact]
        public void UserIdRequestTimeAvgTest()
        {
            // TODO unit test for the property 'UserIdRequestTimeAvg'
        }

        /// <summary>
        /// Test the property 'UserIdRequestTimeMax'
        /// </summary>
        [Fact]
        public void UserIdRequestTimeMaxTest()
        {
            // TODO unit test for the property 'UserIdRequestTimeMax'
        }

        /// <summary>
        /// Test the property 'UserIdRequestTimeCurrent'
        /// </summary>
        [Fact]
        public void UserIdRequestTimeCurrentTest()
        {
            // TODO unit test for the property 'UserIdRequestTimeCurrent'
        }

        /// <summary>
        /// Test the property 'UserIdSuccessTimeAverage'
        /// </summary>
        [Fact]
        public void UserIdSuccessTimeAverageTest()
        {
            // TODO unit test for the property 'UserIdSuccessTimeAverage'
        }

        /// <summary>
        /// Test the property 'UserIdSuccessTimeMax'
        /// </summary>
        [Fact]
        public void UserIdSuccessTimeMaxTest()
        {
            // TODO unit test for the property 'UserIdSuccessTimeMax'
        }

        /// <summary>
        /// Test the property 'UserIdSuccessTimeCurrent'
        /// </summary>
        [Fact]
        public void UserIdSuccessTimeCurrentTest()
        {
            // TODO unit test for the property 'UserIdSuccessTimeCurrent'
        }

        /// <summary>
        /// Test the property 'PollRequestTimeAverage'
        /// </summary>
        [Fact]
        public void PollRequestTimeAverageTest()
        {
            // TODO unit test for the property 'PollRequestTimeAverage'
        }

        /// <summary>
        /// Test the property 'PollRequestTimeMax'
        /// </summary>
        [Fact]
        public void PollRequestTimeMaxTest()
        {
            // TODO unit test for the property 'PollRequestTimeMax'
        }

        /// <summary>
        /// Test the property 'PollRequestTimeCurrent'
        /// </summary>
        [Fact]
        public void PollRequestTimeCurrentTest()
        {
            // TODO unit test for the property 'PollRequestTimeCurrent'
        }

        /// <summary>
        /// Test the property 'PerUserPollRespTimeAverage'
        /// </summary>
        [Fact]
        public void PerUserPollRespTimeAverageTest()
        {
            // TODO unit test for the property 'PerUserPollRespTimeAverage'
        }

        /// <summary>
        /// Test the property 'PerUserPollRespTimeMax'
        /// </summary>
        [Fact]
        public void PerUserPollRespTimeMaxTest()
        {
            // TODO unit test for the property 'PerUserPollRespTimeMax'
        }

        /// <summary>
        /// Test the property 'PerUserPollRespTimeCurrent'
        /// </summary>
        [Fact]
        public void PerUserPollRespTimeCurrentTest()
        {
            // TODO unit test for the property 'PerUserPollRespTimeCurrent'
        }
    }
}
