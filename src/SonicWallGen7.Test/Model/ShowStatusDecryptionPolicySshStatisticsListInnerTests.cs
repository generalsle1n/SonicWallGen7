/*
 * SonicOS API
 *
 * __Swagger Specification for SonicOS APIs__  ___SonicOS support two-factor and bearer token login from SWAGGER only.___  Please follow the following steps to login. > 1. POST \"tfa\" with your username, password, and two-factor code to the firewall. If you are authenticating a username for the first time, please login to GUI and scan the QR code to activate two-factor authentication. > 2. The Bearer Token is returned in response to the \"tfa\" message. Copy the Bearer Token to the \"Authorize\" button. > 3. DELETE \"auth\" to logout of the current session. 
 *
 * The version of the OpenAPI document: 7.0.1
 * Contact: sonicOsApiSupport@SonicWall.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SonicWallGen7.Model;
using SonicWallGen7.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SonicWallGen7.Test.Model
{
    /// <summary>
    ///  Class for testing ShowStatusDecryptionPolicySshStatisticsListInner
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ShowStatusDecryptionPolicySshStatisticsListInnerTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ShowStatusDecryptionPolicySshStatisticsListInner
        //private ShowStatusDecryptionPolicySshStatisticsListInner instance;

        public ShowStatusDecryptionPolicySshStatisticsListInnerTests()
        {
            // TODO uncomment below to create an instance of ShowStatusDecryptionPolicySshStatisticsListInner
            //instance = new ShowStatusDecryptionPolicySshStatisticsListInner();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ShowStatusDecryptionPolicySshStatisticsListInner
        /// </summary>
        [Fact]
        public void ShowStatusDecryptionPolicySshStatisticsListInnerInstanceTest()
        {
            // TODO uncomment below to test "IsType" ShowStatusDecryptionPolicySshStatisticsListInner
            //Assert.IsType<ShowStatusDecryptionPolicySshStatisticsListInner>(instance);
        }

        /// <summary>
        /// Test the property 'Uuid'
        /// </summary>
        [Fact]
        public void UuidTest()
        {
            // TODO unit test for the property 'Uuid'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

        /// <summary>
        /// Test the property 'IpVersion'
        /// </summary>
        [Fact]
        public void IpVersionTest()
        {
            // TODO unit test for the property 'IpVersion'
        }

        /// <summary>
        /// Test the property 'Priority'
        /// </summary>
        [Fact]
        public void PriorityTest()
        {
            // TODO unit test for the property 'Priority'
        }

        /// <summary>
        /// Test the property 'Enable'
        /// </summary>
        [Fact]
        public void EnableTest()
        {
            // TODO unit test for the property 'Enable'
        }

        /// <summary>
        /// Test the property 'Active'
        /// </summary>
        [Fact]
        public void ActiveTest()
        {
            // TODO unit test for the property 'Active'
        }

        /// <summary>
        /// Test the property 'TimeCreated'
        /// </summary>
        [Fact]
        public void TimeCreatedTest()
        {
            // TODO unit test for the property 'TimeCreated'
        }

        /// <summary>
        /// Test the property 'TimeUpdated'
        /// </summary>
        [Fact]
        public void TimeUpdatedTest()
        {
            // TODO unit test for the property 'TimeUpdated'
        }

        /// <summary>
        /// Test the property 'TimeLastHit'
        /// </summary>
        [Fact]
        public void TimeLastHitTest()
        {
            // TODO unit test for the property 'TimeLastHit'
        }

        /// <summary>
        /// Test the property 'SourceAddress'
        /// </summary>
        [Fact]
        public void SourceAddressTest()
        {
            // TODO unit test for the property 'SourceAddress'
        }

        /// <summary>
        /// Test the property 'DestinationAddress'
        /// </summary>
        [Fact]
        public void DestinationAddressTest()
        {
            // TODO unit test for the property 'DestinationAddress'
        }

        /// <summary>
        /// Test the property 'Service'
        /// </summary>
        [Fact]
        public void ServiceTest()
        {
            // TODO unit test for the property 'Service'
        }

        /// <summary>
        /// Test the property 'User'
        /// </summary>
        [Fact]
        public void UserTest()
        {
            // TODO unit test for the property 'User'
        }

        /// <summary>
        /// Test the property 'Country'
        /// </summary>
        [Fact]
        public void CountryTest()
        {
            // TODO unit test for the property 'Country'
        }

        /// <summary>
        /// Test the property 'Schedule'
        /// </summary>
        [Fact]
        public void ScheduleTest()
        {
            // TODO unit test for the property 'Schedule'
        }

        /// <summary>
        /// Test the property 'Action'
        /// </summary>
        [Fact]
        public void ActionTest()
        {
            // TODO unit test for the property 'Action'
        }

        /// <summary>
        /// Test the property 'ReceivedBytes'
        /// </summary>
        [Fact]
        public void ReceivedBytesTest()
        {
            // TODO unit test for the property 'ReceivedBytes'
        }

        /// <summary>
        /// Test the property 'SentBytes'
        /// </summary>
        [Fact]
        public void SentBytesTest()
        {
            // TODO unit test for the property 'SentBytes'
        }

        /// <summary>
        /// Test the property 'ReceivedPackets'
        /// </summary>
        [Fact]
        public void ReceivedPacketsTest()
        {
            // TODO unit test for the property 'ReceivedPackets'
        }

        /// <summary>
        /// Test the property 'SentPackets'
        /// </summary>
        [Fact]
        public void SentPacketsTest()
        {
            // TODO unit test for the property 'SentPackets'
        }

        /// <summary>
        /// Test the property 'ActiveConnections'
        /// </summary>
        [Fact]
        public void ActiveConnectionsTest()
        {
            // TODO unit test for the property 'ActiveConnections'
        }

        /// <summary>
        /// Test the property 'TotalConnections'
        /// </summary>
        [Fact]
        public void TotalConnectionsTest()
        {
            // TODO unit test for the property 'TotalConnections'
        }

        /// <summary>
        /// Test the property 'HitCounts'
        /// </summary>
        [Fact]
        public void HitCountsTest()
        {
            // TODO unit test for the property 'HitCounts'
        }
    }
}
