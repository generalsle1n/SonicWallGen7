/*
 * SonicOS API
 *
 * __Swagger Specification for SonicOS APIs__  ___SonicOS support two-factor and bearer token login from SWAGGER only.___  Please follow the following steps to login. > 1. POST \"tfa\" with your username, password, and two-factor code to the firewall. If you are authenticating a username for the first time, please login to GUI and scan the QR code to activate two-factor authentication. > 2. The Bearer Token is returned in response to the \"tfa\" message. Copy the Bearer Token to the \"Authorize\" button. > 3. DELETE \"auth\" to logout of the current session. 
 *
 * The version of the OpenAPI document: 7.0.1
 * Contact: sonicOsApiSupport@SonicWall.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SonicWallGen7.Model;
using SonicWallGen7.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SonicWallGen7.Test.Model
{
    /// <summary>
    ///  Class for testing ShowStatusAppflowInternalDetail
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ShowStatusAppflowInternalDetailTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ShowStatusAppflowInternalDetail
        //private ShowStatusAppflowInternalDetail instance;

        public ShowStatusAppflowInternalDetailTests()
        {
            // TODO uncomment below to create an instance of ShowStatusAppflowInternalDetail
            //instance = new ShowStatusAppflowInternalDetail();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ShowStatusAppflowInternalDetail
        /// </summary>
        [Fact]
        public void ShowStatusAppflowInternalDetailInstanceTest()
        {
            // TODO uncomment below to test "IsType" ShowStatusAppflowInternalDetail
            //Assert.IsType<ShowStatusAppflowInternalDetail>(instance);
        }

        /// <summary>
        /// Test the property 'DataFlowsEnqueued'
        /// </summary>
        [Fact]
        public void DataFlowsEnqueuedTest()
        {
            // TODO unit test for the property 'DataFlowsEnqueued'
        }

        /// <summary>
        /// Test the property 'DataFlowsDequeued'
        /// </summary>
        [Fact]
        public void DataFlowsDequeuedTest()
        {
            // TODO unit test for the property 'DataFlowsDequeued'
        }

        /// <summary>
        /// Test the property 'DataFlowsDropped'
        /// </summary>
        [Fact]
        public void DataFlowsDroppedTest()
        {
            // TODO unit test for the property 'DataFlowsDropped'
        }

        /// <summary>
        /// Test the property 'DataFlowsSkippedReporting'
        /// </summary>
        [Fact]
        public void DataFlowsSkippedReportingTest()
        {
            // TODO unit test for the property 'DataFlowsSkippedReporting'
        }

        /// <summary>
        /// Test the property 'GeneralFlowsEnqueued'
        /// </summary>
        [Fact]
        public void GeneralFlowsEnqueuedTest()
        {
            // TODO unit test for the property 'GeneralFlowsEnqueued'
        }

        /// <summary>
        /// Test the property 'GeneralFlowsDequeued'
        /// </summary>
        [Fact]
        public void GeneralFlowsDequeuedTest()
        {
            // TODO unit test for the property 'GeneralFlowsDequeued'
        }

        /// <summary>
        /// Test the property 'GeneralFlowsDropped'
        /// </summary>
        [Fact]
        public void GeneralFlowsDroppedTest()
        {
            // TODO unit test for the property 'GeneralFlowsDropped'
        }

        /// <summary>
        /// Test the property 'GeneralStaticFlowsDequeued'
        /// </summary>
        [Fact]
        public void GeneralStaticFlowsDequeuedTest()
        {
            // TODO unit test for the property 'GeneralStaticFlowsDequeued'
        }

        /// <summary>
        /// Test the property 'AppflowCollectorErrors'
        /// </summary>
        [Fact]
        public void AppflowCollectorErrorsTest()
        {
            // TODO unit test for the property 'AppflowCollectorErrors'
        }

        /// <summary>
        /// Test the property 'TotalFlowsInDb'
        /// </summary>
        [Fact]
        public void TotalFlowsInDbTest()
        {
            // TODO unit test for the property 'TotalFlowsInDb'
        }
    }
}
