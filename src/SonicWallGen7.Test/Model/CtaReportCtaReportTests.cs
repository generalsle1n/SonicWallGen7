/*
 * SonicOS API
 *
 * __Swagger Specification for SonicOS APIs__  ___SonicOS support two-factor and bearer token login from SWAGGER only.___  Please follow the following steps to login. > 1. POST \"tfa\" with your username, password, and two-factor code to the firewall. If you are authenticating a username for the first time, please login to GUI and scan the QR code to activate two-factor authentication. > 2. The Bearer Token is returned in response to the \"tfa\" message. Copy the Bearer Token to the \"Authorize\" button. > 3. DELETE \"auth\" to logout of the current session. 
 *
 * The version of the OpenAPI document: 7.0.1
 * Contact: sonicOsApiSupport@SonicWall.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SonicWallGen7.Model;
using SonicWallGen7.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SonicWallGen7.Test.Model
{
    /// <summary>
    ///  Class for testing CtaReportCtaReport
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CtaReportCtaReportTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CtaReportCtaReport
        //private CtaReportCtaReport instance;

        public CtaReportCtaReportTests()
        {
            // TODO uncomment below to create an instance of CtaReportCtaReport
            //instance = new CtaReportCtaReport();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CtaReportCtaReport
        /// </summary>
        [Fact]
        public void CtaReportCtaReportInstanceTest()
        {
            // TODO uncomment below to test "IsType" CtaReportCtaReport
            //Assert.IsType<CtaReportCtaReport>(instance);
        }

        /// <summary>
        /// Test the property 'Locale'
        /// </summary>
        [Fact]
        public void LocaleTest()
        {
            // TODO unit test for the property 'Locale'
        }

        /// <summary>
        /// Test the property 'Style'
        /// </summary>
        [Fact]
        public void StyleTest()
        {
            // TODO unit test for the property 'Style'
        }

        /// <summary>
        /// Test the property 'Snce'
        /// </summary>
        [Fact]
        public void SnceTest()
        {
            // TODO unit test for the property 'Snce'
        }

        /// <summary>
        /// Test the property 'Report'
        /// </summary>
        [Fact]
        public void ReportTest()
        {
            // TODO unit test for the property 'Report'
        }

        /// <summary>
        /// Test the property 'Txt'
        /// </summary>
        [Fact]
        public void TxtTest()
        {
            // TODO unit test for the property 'Txt'
        }

        /// <summary>
        /// Test the property 'CompName'
        /// </summary>
        [Fact]
        public void CompNameTest()
        {
            // TODO unit test for the property 'CompName'
        }

        /// <summary>
        /// Test the property 'PrprName'
        /// </summary>
        [Fact]
        public void PrprNameTest()
        {
            // TODO unit test for the property 'PrprName'
        }

        /// <summary>
        /// Test the property 'Phn'
        /// </summary>
        [Fact]
        public void PhnTest()
        {
            // TODO unit test for the property 'Phn'
        }

        /// <summary>
        /// Test the property 'Mail'
        /// </summary>
        [Fact]
        public void MailTest()
        {
            // TODO unit test for the property 'Mail'
        }

        /// <summary>
        /// Test the property 'ExecOnly'
        /// </summary>
        [Fact]
        public void ExecOnlyTest()
        {
            // TODO unit test for the property 'ExecOnly'
        }

        /// <summary>
        /// Test the property 'AppHlts'
        /// </summary>
        [Fact]
        public void AppHltsTest()
        {
            // TODO unit test for the property 'AppHlts'
        }

        /// <summary>
        /// Test the property 'Thrts'
        /// </summary>
        [Fact]
        public void ThrtsTest()
        {
            // TODO unit test for the property 'Thrts'
        }

        /// <summary>
        /// Test the property 'Btnt'
        /// </summary>
        [Fact]
        public void BtntTest()
        {
            // TODO unit test for the property 'Btnt'
        }

        /// <summary>
        /// Test the property 'UsrSesn'
        /// </summary>
        [Fact]
        public void UsrSesnTest()
        {
            // TODO unit test for the property 'UsrSesn'
        }

        /// <summary>
        /// Test the property 'RskApp'
        /// </summary>
        [Fact]
        public void RskAppTest()
        {
            // TODO unit test for the property 'RskApp'
        }

        /// <summary>
        /// Test the property 'Mlwr'
        /// </summary>
        [Fact]
        public void MlwrTest()
        {
            // TODO unit test for the property 'Mlwr'
        }

        /// <summary>
        /// Test the property 'CntrTrfc'
        /// </summary>
        [Fact]
        public void CntrTrfcTest()
        {
            // TODO unit test for the property 'CntrTrfc'
        }

        /// <summary>
        /// Test the property 'UsrTrfc'
        /// </summary>
        [Fact]
        public void UsrTrfcTest()
        {
            // TODO unit test for the property 'UsrTrfc'
        }

        /// <summary>
        /// Test the property 'WbAct'
        /// </summary>
        [Fact]
        public void WbActTest()
        {
            // TODO unit test for the property 'WbAct'
        }

        /// <summary>
        /// Test the property 'Explts'
        /// </summary>
        [Fact]
        public void ExpltsTest()
        {
            // TODO unit test for the property 'Explts'
        }

        /// <summary>
        /// Test the property 'IpSesn'
        /// </summary>
        [Fact]
        public void IpSesnTest()
        {
            // TODO unit test for the property 'IpSesn'
        }

        /// <summary>
        /// Test the property 'RprtCnf'
        /// </summary>
        [Fact]
        public void RprtCnfTest()
        {
            // TODO unit test for the property 'RprtCnf'
        }

        /// <summary>
        /// Test the property 'FleTrnsfr'
        /// </summary>
        [Fact]
        public void FleTrnsfrTest()
        {
            // TODO unit test for the property 'FleTrnsfr'
        }

        /// <summary>
        /// Test the property 'KnUnkMlwr'
        /// </summary>
        [Fact]
        public void KnUnkMlwrTest()
        {
            // TODO unit test for the property 'KnUnkMlwr'
        }

        /// <summary>
        /// Test the property 'IpTrafc'
        /// </summary>
        [Fact]
        public void IpTrafcTest()
        {
            // TODO unit test for the property 'IpTrafc'
        }

        /// <summary>
        /// Test the property 'Logo'
        /// </summary>
        [Fact]
        public void LogoTest()
        {
            // TODO unit test for the property 'Logo'
        }
    }
}
