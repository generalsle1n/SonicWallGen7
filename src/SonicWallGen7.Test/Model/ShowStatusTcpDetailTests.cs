/*
 * SonicOS API
 *
 * __Swagger Specification for SonicOS APIs__  ___SonicOS support two-factor and bearer token login from SWAGGER only.___  Please follow the following steps to login. > 1. POST \"tfa\" with your username, password, and two-factor code to the firewall. If you are authenticating a username for the first time, please login to GUI and scan the QR code to activate two-factor authentication. > 2. The Bearer Token is returned in response to the \"tfa\" message. Copy the Bearer Token to the \"Authorize\" button. > 3. DELETE \"auth\" to logout of the current session. 
 *
 * The version of the OpenAPI document: 7.0.1
 * Contact: sonicOsApiSupport@SonicWall.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SonicWallGen7.Model;
using SonicWallGen7.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SonicWallGen7.Test.Model
{
    /// <summary>
    ///  Class for testing ShowStatusTcpDetail
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ShowStatusTcpDetailTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ShowStatusTcpDetail
        //private ShowStatusTcpDetail instance;

        public ShowStatusTcpDetailTests()
        {
            // TODO uncomment below to create an instance of ShowStatusTcpDetail
            //instance = new ShowStatusTcpDetail();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ShowStatusTcpDetail
        /// </summary>
        [Fact]
        public void ShowStatusTcpDetailInstanceTest()
        {
            // TODO uncomment below to test "IsType" ShowStatusTcpDetail
            //Assert.IsType<ShowStatusTcpDetail>(instance);
        }

        /// <summary>
        /// Test the property 'ConnectionsOpened'
        /// </summary>
        [Fact]
        public void ConnectionsOpenedTest()
        {
            // TODO unit test for the property 'ConnectionsOpened'
        }

        /// <summary>
        /// Test the property 'ConnectionsClosed'
        /// </summary>
        [Fact]
        public void ConnectionsClosedTest()
        {
            // TODO unit test for the property 'ConnectionsClosed'
        }

        /// <summary>
        /// Test the property 'ConnectionsRefused'
        /// </summary>
        [Fact]
        public void ConnectionsRefusedTest()
        {
            // TODO unit test for the property 'ConnectionsRefused'
        }

        /// <summary>
        /// Test the property 'ConnectionsAborted'
        /// </summary>
        [Fact]
        public void ConnectionsAbortedTest()
        {
            // TODO unit test for the property 'ConnectionsAborted'
        }

        /// <summary>
        /// Test the property 'ConnectionHandshakeErrors'
        /// </summary>
        [Fact]
        public void ConnectionHandshakeErrorsTest()
        {
            // TODO unit test for the property 'ConnectionHandshakeErrors'
        }

        /// <summary>
        /// Test the property 'ConnectionHandshakeTimeouts'
        /// </summary>
        [Fact]
        public void ConnectionHandshakeTimeoutsTest()
        {
            // TODO unit test for the property 'ConnectionHandshakeTimeouts'
        }

        /// <summary>
        /// Test the property 'TotalTcpPackets'
        /// </summary>
        [Fact]
        public void TotalTcpPacketsTest()
        {
            // TODO unit test for the property 'TotalTcpPackets'
        }

        /// <summary>
        /// Test the property 'ValidatedPacketsPassed'
        /// </summary>
        [Fact]
        public void ValidatedPacketsPassedTest()
        {
            // TODO unit test for the property 'ValidatedPacketsPassed'
        }

        /// <summary>
        /// Test the property 'MalformedPacketsDropped'
        /// </summary>
        [Fact]
        public void MalformedPacketsDroppedTest()
        {
            // TODO unit test for the property 'MalformedPacketsDropped'
        }

        /// <summary>
        /// Test the property 'InvalidFlagPacketsDropped'
        /// </summary>
        [Fact]
        public void InvalidFlagPacketsDroppedTest()
        {
            // TODO unit test for the property 'InvalidFlagPacketsDropped'
        }

        /// <summary>
        /// Test the property 'InvalidSequencePacketsDropped'
        /// </summary>
        [Fact]
        public void InvalidSequencePacketsDroppedTest()
        {
            // TODO unit test for the property 'InvalidSequencePacketsDropped'
        }

        /// <summary>
        /// Test the property 'InvalidAcknowledgementPacketsDropped'
        /// </summary>
        [Fact]
        public void InvalidAcknowledgementPacketsDroppedTest()
        {
            // TODO unit test for the property 'InvalidAcknowledgementPacketsDropped'
        }

        /// <summary>
        /// Test the property 'MaxIncompleteWanConnectionsSec'
        /// </summary>
        [Fact]
        public void MaxIncompleteWanConnectionsSecTest()
        {
            // TODO unit test for the property 'MaxIncompleteWanConnectionsSec'
        }

        /// <summary>
        /// Test the property 'AverageIncompleteWanConnectionsSec'
        /// </summary>
        [Fact]
        public void AverageIncompleteWanConnectionsSecTest()
        {
            // TODO unit test for the property 'AverageIncompleteWanConnectionsSec'
        }

        /// <summary>
        /// Test the property 'SuggestedSynAttackThreshold'
        /// </summary>
        [Fact]
        public void SuggestedSynAttackThresholdTest()
        {
            // TODO unit test for the property 'SuggestedSynAttackThreshold'
        }

        /// <summary>
        /// Test the property 'SynFloodsInProgress'
        /// </summary>
        [Fact]
        public void SynFloodsInProgressTest()
        {
            // TODO unit test for the property 'SynFloodsInProgress'
        }

        /// <summary>
        /// Test the property 'RstFloodsInProgress'
        /// </summary>
        [Fact]
        public void RstFloodsInProgressTest()
        {
            // TODO unit test for the property 'RstFloodsInProgress'
        }

        /// <summary>
        /// Test the property 'FinFloodsInProgress'
        /// </summary>
        [Fact]
        public void FinFloodsInProgressTest()
        {
            // TODO unit test for the property 'FinFloodsInProgress'
        }

        /// <summary>
        /// Test the property 'TcpFloodsInProgress'
        /// </summary>
        [Fact]
        public void TcpFloodsInProgressTest()
        {
            // TODO unit test for the property 'TcpFloodsInProgress'
        }

        /// <summary>
        /// Test the property 'TotalSynRstOrFinFloodsDetected'
        /// </summary>
        [Fact]
        public void TotalSynRstOrFinFloodsDetectedTest()
        {
            // TODO unit test for the property 'TotalSynRstOrFinFloodsDetected'
        }

        /// <summary>
        /// Test the property 'TcpConnectionSynProxyStateWanOnly'
        /// </summary>
        [Fact]
        public void TcpConnectionSynProxyStateWanOnlyTest()
        {
            // TODO unit test for the property 'TcpConnectionSynProxyStateWanOnly'
        }

        /// <summary>
        /// Test the property 'CurrentSynBlacklistedMachines'
        /// </summary>
        [Fact]
        public void CurrentSynBlacklistedMachinesTest()
        {
            // TODO unit test for the property 'CurrentSynBlacklistedMachines'
        }

        /// <summary>
        /// Test the property 'CurrentRstBlacklistedMachines'
        /// </summary>
        [Fact]
        public void CurrentRstBlacklistedMachinesTest()
        {
            // TODO unit test for the property 'CurrentRstBlacklistedMachines'
        }

        /// <summary>
        /// Test the property 'CurrentFinBlacklistedMachines'
        /// </summary>
        [Fact]
        public void CurrentFinBlacklistedMachinesTest()
        {
            // TODO unit test for the property 'CurrentFinBlacklistedMachines'
        }

        /// <summary>
        /// Test the property 'CurrentTcpBlacklistedMachines'
        /// </summary>
        [Fact]
        public void CurrentTcpBlacklistedMachinesTest()
        {
            // TODO unit test for the property 'CurrentTcpBlacklistedMachines'
        }

        /// <summary>
        /// Test the property 'TotalSynBlacklistingEvents'
        /// </summary>
        [Fact]
        public void TotalSynBlacklistingEventsTest()
        {
            // TODO unit test for the property 'TotalSynBlacklistingEvents'
        }

        /// <summary>
        /// Test the property 'TotalRstBlacklistingEvents'
        /// </summary>
        [Fact]
        public void TotalRstBlacklistingEventsTest()
        {
            // TODO unit test for the property 'TotalRstBlacklistingEvents'
        }

        /// <summary>
        /// Test the property 'TotalFinBlacklistingEvents'
        /// </summary>
        [Fact]
        public void TotalFinBlacklistingEventsTest()
        {
            // TODO unit test for the property 'TotalFinBlacklistingEvents'
        }

        /// <summary>
        /// Test the property 'TotalTcpBlacklistingEvents'
        /// </summary>
        [Fact]
        public void TotalTcpBlacklistingEventsTest()
        {
            // TODO unit test for the property 'TotalTcpBlacklistingEvents'
        }

        /// <summary>
        /// Test the property 'TotalSynBlacklistPacketsRejected'
        /// </summary>
        [Fact]
        public void TotalSynBlacklistPacketsRejectedTest()
        {
            // TODO unit test for the property 'TotalSynBlacklistPacketsRejected'
        }

        /// <summary>
        /// Test the property 'TotalRstBlacklistPacketsRejected'
        /// </summary>
        [Fact]
        public void TotalRstBlacklistPacketsRejectedTest()
        {
            // TODO unit test for the property 'TotalRstBlacklistPacketsRejected'
        }

        /// <summary>
        /// Test the property 'TotalFinBlacklistPacketsRejected'
        /// </summary>
        [Fact]
        public void TotalFinBlacklistPacketsRejectedTest()
        {
            // TODO unit test for the property 'TotalFinBlacklistPacketsRejected'
        }

        /// <summary>
        /// Test the property 'TotalTcpBlacklistPacketsRejected'
        /// </summary>
        [Fact]
        public void TotalTcpBlacklistPacketsRejectedTest()
        {
            // TODO unit test for the property 'TotalTcpBlacklistPacketsRejected'
        }

        /// <summary>
        /// Test the property 'InvalidSynFloodCookiesReceived'
        /// </summary>
        [Fact]
        public void InvalidSynFloodCookiesReceivedTest()
        {
            // TODO unit test for the property 'InvalidSynFloodCookiesReceived'
        }

        /// <summary>
        /// Test the property 'WanDdosFilterState'
        /// </summary>
        [Fact]
        public void WanDdosFilterStateTest()
        {
            // TODO unit test for the property 'WanDdosFilterState'
        }

        /// <summary>
        /// Test the property 'WanDdosFilterPacketsRejected'
        /// </summary>
        [Fact]
        public void WanDdosFilterPacketsRejectedTest()
        {
            // TODO unit test for the property 'WanDdosFilterPacketsRejected'
        }

        /// <summary>
        /// Test the property 'WanDdosFilterPacketsLeaked'
        /// </summary>
        [Fact]
        public void WanDdosFilterPacketsLeakedTest()
        {
            // TODO unit test for the property 'WanDdosFilterPacketsLeaked'
        }

        /// <summary>
        /// Test the property 'WanDdosFilterAllowListCount'
        /// </summary>
        [Fact]
        public void WanDdosFilterAllowListCountTest()
        {
            // TODO unit test for the property 'WanDdosFilterAllowListCount'
        }
    }
}
