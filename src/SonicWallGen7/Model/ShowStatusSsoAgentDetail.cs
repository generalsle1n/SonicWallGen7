/*
 * SonicOS API
 *
 * __Swagger Specification for SonicOS APIs__  ___SonicOS support two-factor and bearer token login from SWAGGER only.___  Please follow the following steps to login. > 1. POST \"tfa\" with your username, password, and two-factor code to the firewall. If you are authenticating a username for the first time, please login to GUI and scan the QR code to activate two-factor authentication. > 2. The Bearer Token is returned in response to the \"tfa\" message. Copy the Bearer Token to the \"Authorize\" button. > 3. DELETE \"auth\" to logout of the current session. 
 *
 * The version of the OpenAPI document: 7.0.1
 * Contact: sonicOsApiSupport@SonicWall.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = SonicWallGen7.Client.OpenAPIDateConverter;

namespace SonicWallGen7.Model
{
    /// <summary>
    /// sso agent detail schema.
    /// </summary>
    [DataContract(Name = "show_status_sso_agent_detail")]
    public partial class ShowStatusSsoAgentDetail : IEquatable<ShowStatusSsoAgentDetail>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ShowStatusSsoAgentDetail" /> class.
        /// </summary>
        /// <param name="name">name.</param>
        /// <param name="port">port.</param>
        /// <param name="ipAddress">ipAddress.</param>
        /// <param name="status">status.</param>
        /// <param name="userIdentificationMechanisms">userIdentificationMechanisms.</param>
        /// <param name="userRequests">userRequests.</param>
        /// <param name="userReplies">userReplies.</param>
        /// <param name="multiUserRequests">multiUserRequests.</param>
        /// <param name="multiUserReplies">multiUserReplies.</param>
        /// <param name="usersPerMultiUserRequestAverage">usersPerMultiUserRequestAverage.</param>
        /// <param name="usersPerMultiUserRequestMax">usersPerMultiUserRequestMax.</param>
        /// <param name="ssoPingRequests">ssoPingRequests.</param>
        /// <param name="ssoPingReplies">ssoPingReplies.</param>
        /// <param name="repliesWithError">repliesWithError.</param>
        /// <param name="invalidReplies">invalidReplies.</param>
        /// <param name="timeouts">timeouts.</param>
        /// <param name="lateReplies">lateReplies.</param>
        /// <param name="maxOutstandingRequests">maxOutstandingRequests.</param>
        /// <param name="ssoPingResponseTimeAverage">ssoPingResponseTimeAverage.</param>
        /// <param name="ssoPingResponseTimeMax">ssoPingResponseTimeMax.</param>
        /// <param name="userIdRequestTimeAvg">userIdRequestTimeAvg.</param>
        /// <param name="userIdRequestTimeMax">userIdRequestTimeMax.</param>
        /// <param name="userIdRequestTimeCurrent">userIdRequestTimeCurrent.</param>
        /// <param name="userIdSuccessTimeAverage">userIdSuccessTimeAverage.</param>
        /// <param name="userIdSuccessTimeMax">userIdSuccessTimeMax.</param>
        /// <param name="userIdSuccessTimeCurrent">userIdSuccessTimeCurrent.</param>
        /// <param name="pollRequestTimeAverage">pollRequestTimeAverage.</param>
        /// <param name="pollRequestTimeMax">pollRequestTimeMax.</param>
        /// <param name="pollRequestTimeCurrent">pollRequestTimeCurrent.</param>
        /// <param name="perUserPollRespTimeAverage">perUserPollRespTimeAverage.</param>
        /// <param name="perUserPollRespTimeMax">perUserPollRespTimeMax.</param>
        /// <param name="perUserPollRespTimeCurrent">perUserPollRespTimeCurrent.</param>
        public ShowStatusSsoAgentDetail(string name = default(string), string port = default(string), string ipAddress = default(string), string status = default(string), string userIdentificationMechanisms = default(string), string userRequests = default(string), string userReplies = default(string), string multiUserRequests = default(string), string multiUserReplies = default(string), string usersPerMultiUserRequestAverage = default(string), string usersPerMultiUserRequestMax = default(string), string ssoPingRequests = default(string), string ssoPingReplies = default(string), string repliesWithError = default(string), string invalidReplies = default(string), string timeouts = default(string), string lateReplies = default(string), string maxOutstandingRequests = default(string), string ssoPingResponseTimeAverage = default(string), string ssoPingResponseTimeMax = default(string), string userIdRequestTimeAvg = default(string), string userIdRequestTimeMax = default(string), string userIdRequestTimeCurrent = default(string), string userIdSuccessTimeAverage = default(string), string userIdSuccessTimeMax = default(string), string userIdSuccessTimeCurrent = default(string), string pollRequestTimeAverage = default(string), string pollRequestTimeMax = default(string), string pollRequestTimeCurrent = default(string), string perUserPollRespTimeAverage = default(string), string perUserPollRespTimeMax = default(string), string perUserPollRespTimeCurrent = default(string))
        {
            this.Name = name;
            this.Port = port;
            this.IpAddress = ipAddress;
            this.Status = status;
            this.UserIdentificationMechanisms = userIdentificationMechanisms;
            this.UserRequests = userRequests;
            this.UserReplies = userReplies;
            this.MultiUserRequests = multiUserRequests;
            this.MultiUserReplies = multiUserReplies;
            this.UsersPerMultiUserRequestAverage = usersPerMultiUserRequestAverage;
            this.UsersPerMultiUserRequestMax = usersPerMultiUserRequestMax;
            this.SsoPingRequests = ssoPingRequests;
            this.SsoPingReplies = ssoPingReplies;
            this.RepliesWithError = repliesWithError;
            this.InvalidReplies = invalidReplies;
            this.Timeouts = timeouts;
            this.LateReplies = lateReplies;
            this.MaxOutstandingRequests = maxOutstandingRequests;
            this.SsoPingResponseTimeAverage = ssoPingResponseTimeAverage;
            this.SsoPingResponseTimeMax = ssoPingResponseTimeMax;
            this.UserIdRequestTimeAvg = userIdRequestTimeAvg;
            this.UserIdRequestTimeMax = userIdRequestTimeMax;
            this.UserIdRequestTimeCurrent = userIdRequestTimeCurrent;
            this.UserIdSuccessTimeAverage = userIdSuccessTimeAverage;
            this.UserIdSuccessTimeMax = userIdSuccessTimeMax;
            this.UserIdSuccessTimeCurrent = userIdSuccessTimeCurrent;
            this.PollRequestTimeAverage = pollRequestTimeAverage;
            this.PollRequestTimeMax = pollRequestTimeMax;
            this.PollRequestTimeCurrent = pollRequestTimeCurrent;
            this.PerUserPollRespTimeAverage = perUserPollRespTimeAverage;
            this.PerUserPollRespTimeMax = perUserPollRespTimeMax;
            this.PerUserPollRespTimeCurrent = perUserPollRespTimeCurrent;
        }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Port
        /// </summary>
        [DataMember(Name = "port", EmitDefaultValue = false)]
        public string Port { get; set; }

        /// <summary>
        /// Gets or Sets IpAddress
        /// </summary>
        [DataMember(Name = "ip_address", EmitDefaultValue = false)]
        public string IpAddress { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets UserIdentificationMechanisms
        /// </summary>
        [DataMember(Name = "user_identification_mechanisms", EmitDefaultValue = false)]
        public string UserIdentificationMechanisms { get; set; }

        /// <summary>
        /// Gets or Sets UserRequests
        /// </summary>
        [DataMember(Name = "user_requests", EmitDefaultValue = false)]
        public string UserRequests { get; set; }

        /// <summary>
        /// Gets or Sets UserReplies
        /// </summary>
        [DataMember(Name = "user_replies", EmitDefaultValue = false)]
        public string UserReplies { get; set; }

        /// <summary>
        /// Gets or Sets MultiUserRequests
        /// </summary>
        [DataMember(Name = "multi_user_requests", EmitDefaultValue = false)]
        public string MultiUserRequests { get; set; }

        /// <summary>
        /// Gets or Sets MultiUserReplies
        /// </summary>
        [DataMember(Name = "multi_user_replies", EmitDefaultValue = false)]
        public string MultiUserReplies { get; set; }

        /// <summary>
        /// Gets or Sets UsersPerMultiUserRequestAverage
        /// </summary>
        [DataMember(Name = "users_per_multi_user_request_average", EmitDefaultValue = false)]
        public string UsersPerMultiUserRequestAverage { get; set; }

        /// <summary>
        /// Gets or Sets UsersPerMultiUserRequestMax
        /// </summary>
        [DataMember(Name = "users_per_multi_user_request_max", EmitDefaultValue = false)]
        public string UsersPerMultiUserRequestMax { get; set; }

        /// <summary>
        /// Gets or Sets SsoPingRequests
        /// </summary>
        [DataMember(Name = "sso_ping_requests", EmitDefaultValue = false)]
        public string SsoPingRequests { get; set; }

        /// <summary>
        /// Gets or Sets SsoPingReplies
        /// </summary>
        [DataMember(Name = "sso_ping_replies", EmitDefaultValue = false)]
        public string SsoPingReplies { get; set; }

        /// <summary>
        /// Gets or Sets RepliesWithError
        /// </summary>
        [DataMember(Name = "replies_with_error", EmitDefaultValue = false)]
        public string RepliesWithError { get; set; }

        /// <summary>
        /// Gets or Sets InvalidReplies
        /// </summary>
        [DataMember(Name = "invalid_replies", EmitDefaultValue = false)]
        public string InvalidReplies { get; set; }

        /// <summary>
        /// Gets or Sets Timeouts
        /// </summary>
        [DataMember(Name = "timeouts", EmitDefaultValue = false)]
        public string Timeouts { get; set; }

        /// <summary>
        /// Gets or Sets LateReplies
        /// </summary>
        [DataMember(Name = "late_replies", EmitDefaultValue = false)]
        public string LateReplies { get; set; }

        /// <summary>
        /// Gets or Sets MaxOutstandingRequests
        /// </summary>
        [DataMember(Name = "max_outstanding_requests", EmitDefaultValue = false)]
        public string MaxOutstandingRequests { get; set; }

        /// <summary>
        /// Gets or Sets SsoPingResponseTimeAverage
        /// </summary>
        [DataMember(Name = "sso_ping_response_time_average", EmitDefaultValue = false)]
        public string SsoPingResponseTimeAverage { get; set; }

        /// <summary>
        /// Gets or Sets SsoPingResponseTimeMax
        /// </summary>
        [DataMember(Name = "sso_ping_response_time_max", EmitDefaultValue = false)]
        public string SsoPingResponseTimeMax { get; set; }

        /// <summary>
        /// Gets or Sets UserIdRequestTimeAvg
        /// </summary>
        [DataMember(Name = "user_id_request_time_avg", EmitDefaultValue = false)]
        public string UserIdRequestTimeAvg { get; set; }

        /// <summary>
        /// Gets or Sets UserIdRequestTimeMax
        /// </summary>
        [DataMember(Name = "user_id_request_time_max", EmitDefaultValue = false)]
        public string UserIdRequestTimeMax { get; set; }

        /// <summary>
        /// Gets or Sets UserIdRequestTimeCurrent
        /// </summary>
        [DataMember(Name = "user_id_request_time_current", EmitDefaultValue = false)]
        public string UserIdRequestTimeCurrent { get; set; }

        /// <summary>
        /// Gets or Sets UserIdSuccessTimeAverage
        /// </summary>
        [DataMember(Name = "user_id_success_time_average", EmitDefaultValue = false)]
        public string UserIdSuccessTimeAverage { get; set; }

        /// <summary>
        /// Gets or Sets UserIdSuccessTimeMax
        /// </summary>
        [DataMember(Name = "user_id_success_time_max", EmitDefaultValue = false)]
        public string UserIdSuccessTimeMax { get; set; }

        /// <summary>
        /// Gets or Sets UserIdSuccessTimeCurrent
        /// </summary>
        [DataMember(Name = "user_id_success_time_current", EmitDefaultValue = false)]
        public string UserIdSuccessTimeCurrent { get; set; }

        /// <summary>
        /// Gets or Sets PollRequestTimeAverage
        /// </summary>
        [DataMember(Name = "poll_request_time_average", EmitDefaultValue = false)]
        public string PollRequestTimeAverage { get; set; }

        /// <summary>
        /// Gets or Sets PollRequestTimeMax
        /// </summary>
        [DataMember(Name = "poll_request_time_max", EmitDefaultValue = false)]
        public string PollRequestTimeMax { get; set; }

        /// <summary>
        /// Gets or Sets PollRequestTimeCurrent
        /// </summary>
        [DataMember(Name = "poll_request_time_current", EmitDefaultValue = false)]
        public string PollRequestTimeCurrent { get; set; }

        /// <summary>
        /// Gets or Sets PerUserPollRespTimeAverage
        /// </summary>
        [DataMember(Name = "per_user_poll_resp_time_average", EmitDefaultValue = false)]
        public string PerUserPollRespTimeAverage { get; set; }

        /// <summary>
        /// Gets or Sets PerUserPollRespTimeMax
        /// </summary>
        [DataMember(Name = "per_user_poll_resp_time_max", EmitDefaultValue = false)]
        public string PerUserPollRespTimeMax { get; set; }

        /// <summary>
        /// Gets or Sets PerUserPollRespTimeCurrent
        /// </summary>
        [DataMember(Name = "per_user_poll_resp_time_current", EmitDefaultValue = false)]
        public string PerUserPollRespTimeCurrent { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ShowStatusSsoAgentDetail {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Port: ").Append(Port).Append("\n");
            sb.Append("  IpAddress: ").Append(IpAddress).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  UserIdentificationMechanisms: ").Append(UserIdentificationMechanisms).Append("\n");
            sb.Append("  UserRequests: ").Append(UserRequests).Append("\n");
            sb.Append("  UserReplies: ").Append(UserReplies).Append("\n");
            sb.Append("  MultiUserRequests: ").Append(MultiUserRequests).Append("\n");
            sb.Append("  MultiUserReplies: ").Append(MultiUserReplies).Append("\n");
            sb.Append("  UsersPerMultiUserRequestAverage: ").Append(UsersPerMultiUserRequestAverage).Append("\n");
            sb.Append("  UsersPerMultiUserRequestMax: ").Append(UsersPerMultiUserRequestMax).Append("\n");
            sb.Append("  SsoPingRequests: ").Append(SsoPingRequests).Append("\n");
            sb.Append("  SsoPingReplies: ").Append(SsoPingReplies).Append("\n");
            sb.Append("  RepliesWithError: ").Append(RepliesWithError).Append("\n");
            sb.Append("  InvalidReplies: ").Append(InvalidReplies).Append("\n");
            sb.Append("  Timeouts: ").Append(Timeouts).Append("\n");
            sb.Append("  LateReplies: ").Append(LateReplies).Append("\n");
            sb.Append("  MaxOutstandingRequests: ").Append(MaxOutstandingRequests).Append("\n");
            sb.Append("  SsoPingResponseTimeAverage: ").Append(SsoPingResponseTimeAverage).Append("\n");
            sb.Append("  SsoPingResponseTimeMax: ").Append(SsoPingResponseTimeMax).Append("\n");
            sb.Append("  UserIdRequestTimeAvg: ").Append(UserIdRequestTimeAvg).Append("\n");
            sb.Append("  UserIdRequestTimeMax: ").Append(UserIdRequestTimeMax).Append("\n");
            sb.Append("  UserIdRequestTimeCurrent: ").Append(UserIdRequestTimeCurrent).Append("\n");
            sb.Append("  UserIdSuccessTimeAverage: ").Append(UserIdSuccessTimeAverage).Append("\n");
            sb.Append("  UserIdSuccessTimeMax: ").Append(UserIdSuccessTimeMax).Append("\n");
            sb.Append("  UserIdSuccessTimeCurrent: ").Append(UserIdSuccessTimeCurrent).Append("\n");
            sb.Append("  PollRequestTimeAverage: ").Append(PollRequestTimeAverage).Append("\n");
            sb.Append("  PollRequestTimeMax: ").Append(PollRequestTimeMax).Append("\n");
            sb.Append("  PollRequestTimeCurrent: ").Append(PollRequestTimeCurrent).Append("\n");
            sb.Append("  PerUserPollRespTimeAverage: ").Append(PerUserPollRespTimeAverage).Append("\n");
            sb.Append("  PerUserPollRespTimeMax: ").Append(PerUserPollRespTimeMax).Append("\n");
            sb.Append("  PerUserPollRespTimeCurrent: ").Append(PerUserPollRespTimeCurrent).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ShowStatusSsoAgentDetail);
        }

        /// <summary>
        /// Returns true if ShowStatusSsoAgentDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of ShowStatusSsoAgentDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ShowStatusSsoAgentDetail input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Port == input.Port ||
                    (this.Port != null &&
                    this.Port.Equals(input.Port))
                ) && 
                (
                    this.IpAddress == input.IpAddress ||
                    (this.IpAddress != null &&
                    this.IpAddress.Equals(input.IpAddress))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.UserIdentificationMechanisms == input.UserIdentificationMechanisms ||
                    (this.UserIdentificationMechanisms != null &&
                    this.UserIdentificationMechanisms.Equals(input.UserIdentificationMechanisms))
                ) && 
                (
                    this.UserRequests == input.UserRequests ||
                    (this.UserRequests != null &&
                    this.UserRequests.Equals(input.UserRequests))
                ) && 
                (
                    this.UserReplies == input.UserReplies ||
                    (this.UserReplies != null &&
                    this.UserReplies.Equals(input.UserReplies))
                ) && 
                (
                    this.MultiUserRequests == input.MultiUserRequests ||
                    (this.MultiUserRequests != null &&
                    this.MultiUserRequests.Equals(input.MultiUserRequests))
                ) && 
                (
                    this.MultiUserReplies == input.MultiUserReplies ||
                    (this.MultiUserReplies != null &&
                    this.MultiUserReplies.Equals(input.MultiUserReplies))
                ) && 
                (
                    this.UsersPerMultiUserRequestAverage == input.UsersPerMultiUserRequestAverage ||
                    (this.UsersPerMultiUserRequestAverage != null &&
                    this.UsersPerMultiUserRequestAverage.Equals(input.UsersPerMultiUserRequestAverage))
                ) && 
                (
                    this.UsersPerMultiUserRequestMax == input.UsersPerMultiUserRequestMax ||
                    (this.UsersPerMultiUserRequestMax != null &&
                    this.UsersPerMultiUserRequestMax.Equals(input.UsersPerMultiUserRequestMax))
                ) && 
                (
                    this.SsoPingRequests == input.SsoPingRequests ||
                    (this.SsoPingRequests != null &&
                    this.SsoPingRequests.Equals(input.SsoPingRequests))
                ) && 
                (
                    this.SsoPingReplies == input.SsoPingReplies ||
                    (this.SsoPingReplies != null &&
                    this.SsoPingReplies.Equals(input.SsoPingReplies))
                ) && 
                (
                    this.RepliesWithError == input.RepliesWithError ||
                    (this.RepliesWithError != null &&
                    this.RepliesWithError.Equals(input.RepliesWithError))
                ) && 
                (
                    this.InvalidReplies == input.InvalidReplies ||
                    (this.InvalidReplies != null &&
                    this.InvalidReplies.Equals(input.InvalidReplies))
                ) && 
                (
                    this.Timeouts == input.Timeouts ||
                    (this.Timeouts != null &&
                    this.Timeouts.Equals(input.Timeouts))
                ) && 
                (
                    this.LateReplies == input.LateReplies ||
                    (this.LateReplies != null &&
                    this.LateReplies.Equals(input.LateReplies))
                ) && 
                (
                    this.MaxOutstandingRequests == input.MaxOutstandingRequests ||
                    (this.MaxOutstandingRequests != null &&
                    this.MaxOutstandingRequests.Equals(input.MaxOutstandingRequests))
                ) && 
                (
                    this.SsoPingResponseTimeAverage == input.SsoPingResponseTimeAverage ||
                    (this.SsoPingResponseTimeAverage != null &&
                    this.SsoPingResponseTimeAverage.Equals(input.SsoPingResponseTimeAverage))
                ) && 
                (
                    this.SsoPingResponseTimeMax == input.SsoPingResponseTimeMax ||
                    (this.SsoPingResponseTimeMax != null &&
                    this.SsoPingResponseTimeMax.Equals(input.SsoPingResponseTimeMax))
                ) && 
                (
                    this.UserIdRequestTimeAvg == input.UserIdRequestTimeAvg ||
                    (this.UserIdRequestTimeAvg != null &&
                    this.UserIdRequestTimeAvg.Equals(input.UserIdRequestTimeAvg))
                ) && 
                (
                    this.UserIdRequestTimeMax == input.UserIdRequestTimeMax ||
                    (this.UserIdRequestTimeMax != null &&
                    this.UserIdRequestTimeMax.Equals(input.UserIdRequestTimeMax))
                ) && 
                (
                    this.UserIdRequestTimeCurrent == input.UserIdRequestTimeCurrent ||
                    (this.UserIdRequestTimeCurrent != null &&
                    this.UserIdRequestTimeCurrent.Equals(input.UserIdRequestTimeCurrent))
                ) && 
                (
                    this.UserIdSuccessTimeAverage == input.UserIdSuccessTimeAverage ||
                    (this.UserIdSuccessTimeAverage != null &&
                    this.UserIdSuccessTimeAverage.Equals(input.UserIdSuccessTimeAverage))
                ) && 
                (
                    this.UserIdSuccessTimeMax == input.UserIdSuccessTimeMax ||
                    (this.UserIdSuccessTimeMax != null &&
                    this.UserIdSuccessTimeMax.Equals(input.UserIdSuccessTimeMax))
                ) && 
                (
                    this.UserIdSuccessTimeCurrent == input.UserIdSuccessTimeCurrent ||
                    (this.UserIdSuccessTimeCurrent != null &&
                    this.UserIdSuccessTimeCurrent.Equals(input.UserIdSuccessTimeCurrent))
                ) && 
                (
                    this.PollRequestTimeAverage == input.PollRequestTimeAverage ||
                    (this.PollRequestTimeAverage != null &&
                    this.PollRequestTimeAverage.Equals(input.PollRequestTimeAverage))
                ) && 
                (
                    this.PollRequestTimeMax == input.PollRequestTimeMax ||
                    (this.PollRequestTimeMax != null &&
                    this.PollRequestTimeMax.Equals(input.PollRequestTimeMax))
                ) && 
                (
                    this.PollRequestTimeCurrent == input.PollRequestTimeCurrent ||
                    (this.PollRequestTimeCurrent != null &&
                    this.PollRequestTimeCurrent.Equals(input.PollRequestTimeCurrent))
                ) && 
                (
                    this.PerUserPollRespTimeAverage == input.PerUserPollRespTimeAverage ||
                    (this.PerUserPollRespTimeAverage != null &&
                    this.PerUserPollRespTimeAverage.Equals(input.PerUserPollRespTimeAverage))
                ) && 
                (
                    this.PerUserPollRespTimeMax == input.PerUserPollRespTimeMax ||
                    (this.PerUserPollRespTimeMax != null &&
                    this.PerUserPollRespTimeMax.Equals(input.PerUserPollRespTimeMax))
                ) && 
                (
                    this.PerUserPollRespTimeCurrent == input.PerUserPollRespTimeCurrent ||
                    (this.PerUserPollRespTimeCurrent != null &&
                    this.PerUserPollRespTimeCurrent.Equals(input.PerUserPollRespTimeCurrent))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                if (this.Port != null)
                {
                    hashCode = (hashCode * 59) + this.Port.GetHashCode();
                }
                if (this.IpAddress != null)
                {
                    hashCode = (hashCode * 59) + this.IpAddress.GetHashCode();
                }
                if (this.Status != null)
                {
                    hashCode = (hashCode * 59) + this.Status.GetHashCode();
                }
                if (this.UserIdentificationMechanisms != null)
                {
                    hashCode = (hashCode * 59) + this.UserIdentificationMechanisms.GetHashCode();
                }
                if (this.UserRequests != null)
                {
                    hashCode = (hashCode * 59) + this.UserRequests.GetHashCode();
                }
                if (this.UserReplies != null)
                {
                    hashCode = (hashCode * 59) + this.UserReplies.GetHashCode();
                }
                if (this.MultiUserRequests != null)
                {
                    hashCode = (hashCode * 59) + this.MultiUserRequests.GetHashCode();
                }
                if (this.MultiUserReplies != null)
                {
                    hashCode = (hashCode * 59) + this.MultiUserReplies.GetHashCode();
                }
                if (this.UsersPerMultiUserRequestAverage != null)
                {
                    hashCode = (hashCode * 59) + this.UsersPerMultiUserRequestAverage.GetHashCode();
                }
                if (this.UsersPerMultiUserRequestMax != null)
                {
                    hashCode = (hashCode * 59) + this.UsersPerMultiUserRequestMax.GetHashCode();
                }
                if (this.SsoPingRequests != null)
                {
                    hashCode = (hashCode * 59) + this.SsoPingRequests.GetHashCode();
                }
                if (this.SsoPingReplies != null)
                {
                    hashCode = (hashCode * 59) + this.SsoPingReplies.GetHashCode();
                }
                if (this.RepliesWithError != null)
                {
                    hashCode = (hashCode * 59) + this.RepliesWithError.GetHashCode();
                }
                if (this.InvalidReplies != null)
                {
                    hashCode = (hashCode * 59) + this.InvalidReplies.GetHashCode();
                }
                if (this.Timeouts != null)
                {
                    hashCode = (hashCode * 59) + this.Timeouts.GetHashCode();
                }
                if (this.LateReplies != null)
                {
                    hashCode = (hashCode * 59) + this.LateReplies.GetHashCode();
                }
                if (this.MaxOutstandingRequests != null)
                {
                    hashCode = (hashCode * 59) + this.MaxOutstandingRequests.GetHashCode();
                }
                if (this.SsoPingResponseTimeAverage != null)
                {
                    hashCode = (hashCode * 59) + this.SsoPingResponseTimeAverage.GetHashCode();
                }
                if (this.SsoPingResponseTimeMax != null)
                {
                    hashCode = (hashCode * 59) + this.SsoPingResponseTimeMax.GetHashCode();
                }
                if (this.UserIdRequestTimeAvg != null)
                {
                    hashCode = (hashCode * 59) + this.UserIdRequestTimeAvg.GetHashCode();
                }
                if (this.UserIdRequestTimeMax != null)
                {
                    hashCode = (hashCode * 59) + this.UserIdRequestTimeMax.GetHashCode();
                }
                if (this.UserIdRequestTimeCurrent != null)
                {
                    hashCode = (hashCode * 59) + this.UserIdRequestTimeCurrent.GetHashCode();
                }
                if (this.UserIdSuccessTimeAverage != null)
                {
                    hashCode = (hashCode * 59) + this.UserIdSuccessTimeAverage.GetHashCode();
                }
                if (this.UserIdSuccessTimeMax != null)
                {
                    hashCode = (hashCode * 59) + this.UserIdSuccessTimeMax.GetHashCode();
                }
                if (this.UserIdSuccessTimeCurrent != null)
                {
                    hashCode = (hashCode * 59) + this.UserIdSuccessTimeCurrent.GetHashCode();
                }
                if (this.PollRequestTimeAverage != null)
                {
                    hashCode = (hashCode * 59) + this.PollRequestTimeAverage.GetHashCode();
                }
                if (this.PollRequestTimeMax != null)
                {
                    hashCode = (hashCode * 59) + this.PollRequestTimeMax.GetHashCode();
                }
                if (this.PollRequestTimeCurrent != null)
                {
                    hashCode = (hashCode * 59) + this.PollRequestTimeCurrent.GetHashCode();
                }
                if (this.PerUserPollRespTimeAverage != null)
                {
                    hashCode = (hashCode * 59) + this.PerUserPollRespTimeAverage.GetHashCode();
                }
                if (this.PerUserPollRespTimeMax != null)
                {
                    hashCode = (hashCode * 59) + this.PerUserPollRespTimeMax.GetHashCode();
                }
                if (this.PerUserPollRespTimeCurrent != null)
                {
                    hashCode = (hashCode * 59) + this.PerUserPollRespTimeCurrent.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
