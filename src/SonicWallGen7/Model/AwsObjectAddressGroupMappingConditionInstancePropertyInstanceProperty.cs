/*
 * SonicOS API
 *
 * __Swagger Specification for SonicOS APIs__  ___SonicOS support two-factor and bearer token login from SWAGGER only.___  Please follow the following steps to login. > 1. POST \"tfa\" with your username, password, and two-factor code to the firewall. If you are authenticating a username for the first time, please login to GUI and scan the QR code to activate two-factor authentication. > 2. The Bearer Token is returned in response to the \"tfa\" message. Copy the Bearer Token to the \"Authorize\" button. > 3. DELETE \"auth\" to logout of the current session. 
 *
 * The version of the OpenAPI document: 7.0.1
 * Contact: sonicOsApiSupport@SonicWall.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = SonicWallGen7.Client.OpenAPIDateConverter;

namespace SonicWallGen7.Model
{
    /// <summary>
    /// Instance property.
    /// </summary>
    [DataContract(Name = "aws_object_address_group_mapping_condition_instance_property_instance_property")]
    public partial class AwsObjectAddressGroupMappingConditionInstancePropertyInstanceProperty : IEquatable<AwsObjectAddressGroupMappingConditionInstancePropertyInstanceProperty>, IValidatableObject
    {
        /// <summary>
        /// Instance property.
        /// </summary>
        /// <value>Instance property.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum KeyEnum
        {
            /// <summary>
            /// Enum InstanceId for value: instance-id
            /// </summary>
            [EnumMember(Value = "instance-id")]
            InstanceId = 1,

            /// <summary>
            /// Enum ImageId for value: image-id
            /// </summary>
            [EnumMember(Value = "image-id")]
            ImageId = 2,

            /// <summary>
            /// Enum SubnetId for value: subnet-id
            /// </summary>
            [EnumMember(Value = "subnet-id")]
            SubnetId = 3,

            /// <summary>
            /// Enum VpcId for value: vpc-id
            /// </summary>
            [EnumMember(Value = "vpc-id")]
            VpcId = 4,

            /// <summary>
            /// Enum PrivateDnsName for value: private-dns-name
            /// </summary>
            [EnumMember(Value = "private-dns-name")]
            PrivateDnsName = 5,

            /// <summary>
            /// Enum InstanceType for value: instance-type
            /// </summary>
            [EnumMember(Value = "instance-type")]
            InstanceType = 6,

            /// <summary>
            /// Enum Architecture for value: architecture
            /// </summary>
            [EnumMember(Value = "architecture")]
            Architecture = 7,

            /// <summary>
            /// Enum PrivateIpAddress for value: private-ip-address
            /// </summary>
            [EnumMember(Value = "private-ip-address")]
            PrivateIpAddress = 8,

            /// <summary>
            /// Enum IpAddress for value: ip-address
            /// </summary>
            [EnumMember(Value = "ip-address")]
            IpAddress = 9,

            /// <summary>
            /// Enum InstanceState for value: instance-state
            /// </summary>
            [EnumMember(Value = "instance-state")]
            InstanceState = 10
        }


        /// <summary>
        /// Instance property.
        /// </summary>
        /// <value>Instance property.</value>
        [DataMember(Name = "key", EmitDefaultValue = false)]
        public KeyEnum? Key { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AwsObjectAddressGroupMappingConditionInstancePropertyInstanceProperty" /> class.
        /// </summary>
        /// <param name="key">Instance property..</param>
        /// <param name="value">Tag value..</param>
        public AwsObjectAddressGroupMappingConditionInstancePropertyInstanceProperty(KeyEnum? key = default(KeyEnum?), string value = default(string))
        {
            this.Key = key;
            this.Value = value;
        }

        /// <summary>
        /// Tag value.
        /// </summary>
        /// <value>Tag value.</value>
        [DataMember(Name = "value", EmitDefaultValue = false)]
        public string Value { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AwsObjectAddressGroupMappingConditionInstancePropertyInstanceProperty {\n");
            sb.Append("  Key: ").Append(Key).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AwsObjectAddressGroupMappingConditionInstancePropertyInstanceProperty);
        }

        /// <summary>
        /// Returns true if AwsObjectAddressGroupMappingConditionInstancePropertyInstanceProperty instances are equal
        /// </summary>
        /// <param name="input">Instance of AwsObjectAddressGroupMappingConditionInstancePropertyInstanceProperty to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AwsObjectAddressGroupMappingConditionInstancePropertyInstanceProperty input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Key == input.Key ||
                    this.Key.Equals(input.Key)
                ) && 
                (
                    this.Value == input.Value ||
                    (this.Value != null &&
                    this.Value.Equals(input.Value))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.Key.GetHashCode();
                if (this.Value != null)
                {
                    hashCode = (hashCode * 59) + this.Value.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
