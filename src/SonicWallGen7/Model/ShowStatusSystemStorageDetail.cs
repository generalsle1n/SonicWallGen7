/*
 * SonicOS API
 *
 * __Swagger Specification for SonicOS APIs__  ___SonicOS support two-factor and bearer token login from SWAGGER only.___  Please follow the following steps to login. > 1. POST \"tfa\" with your username, password, and two-factor code to the firewall. If you are authenticating a username for the first time, please login to GUI and scan the QR code to activate two-factor authentication. > 2. The Bearer Token is returned in response to the \"tfa\" message. Copy the Bearer Token to the \"Authorize\" button. > 3. DELETE \"auth\" to logout of the current session. 
 *
 * The version of the OpenAPI document: 7.0.1
 * Contact: sonicOsApiSupport@SonicWall.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = SonicWallGen7.Client.OpenAPIDateConverter;

namespace SonicWallGen7.Model
{
    /// <summary>
    /// system storage detail schema.
    /// </summary>
    [DataContract(Name = "show_status_system_storage_detail")]
    public partial class ShowStatusSystemStorageDetail : IEquatable<ShowStatusSystemStorageDetail>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ShowStatusSystemStorageDetail" /> class.
        /// </summary>
        /// <param name="extendedStorageEnabled">extendedStorageEnabled.</param>
        /// <param name="primaryStorageMounted">primaryStorageMounted.</param>
        /// <param name="extendedStorageMounted">extendedStorageMounted.</param>
        /// <param name="extendedStorageDeviceNumber">extendedStorageDeviceNumber.</param>
        /// <param name="logsOnWhichStorageDevice">logsOnWhichStorageDevice.</param>
        /// <param name="logsOnStorageEnabled">logsOnStorageEnabled.</param>
        /// <param name="primaryStorageSn">primaryStorageSn.</param>
        /// <param name="extendedStorageSn">extendedStorageSn.</param>
        /// <param name="primaryStorageTotalSize">primaryStorageTotalSize.</param>
        /// <param name="primaryStorageUsed">primaryStorageUsed.</param>
        /// <param name="primaryStorageFree">primaryStorageFree.</param>
        /// <param name="extendedStorageTotalSize">extendedStorageTotalSize.</param>
        /// <param name="extendedStorageUsed">extendedStorageUsed.</param>
        /// <param name="extendedStorageFree">extendedStorageFree.</param>
        /// <param name="primaryStorageMountStatus">primaryStorageMountStatus.</param>
        /// <param name="extendedStorageMountStatus">extendedStorageMountStatus.</param>
        /// <param name="primaryStorageSizeStatus">primaryStorageSizeStatus.</param>
        /// <param name="extendedStorageSizeStatus">extendedStorageSizeStatus.</param>
        /// <param name="primaryStorageAssociation">primaryStorageAssociation.</param>
        /// <param name="extendedStorageAssociation">extendedStorageAssociation.</param>
        /// <param name="primaryStorageAuthCode">primaryStorageAuthCode.</param>
        /// <param name="extendedStorageAuthCode">extendedStorageAuthCode.</param>
        /// <param name="systemDataSize">systemDataSize.</param>
        /// <param name="diagnosticDataSize">diagnosticDataSize.</param>
        /// <param name="primaryLogsSize">primaryLogsSize.</param>
        /// <param name="extendedLogsSize">extendedLogsSize.</param>
        /// <param name="primaryConfigurationBackupSize">primaryConfigurationBackupSize.</param>
        /// <param name="extendedConfigurationBackupSize">extendedConfigurationBackupSize.</param>
        /// <param name="primaryCaptureAtpReports">primaryCaptureAtpReports.</param>
        /// <param name="extendedCaptureAtpReports">extendedCaptureAtpReports.</param>
        /// <param name="primaryApplicationFlowReports">primaryApplicationFlowReports.</param>
        /// <param name="extendedApplicationFlowReports">extendedApplicationFlowReports.</param>
        /// <param name="primaryPacketCaptures">primaryPacketCaptures.</param>
        /// <param name="extendedPacketCaptures">extendedPacketCaptures.</param>
        public ShowStatusSystemStorageDetail(string extendedStorageEnabled = default(string), string primaryStorageMounted = default(string), string extendedStorageMounted = default(string), string extendedStorageDeviceNumber = default(string), string logsOnWhichStorageDevice = default(string), string logsOnStorageEnabled = default(string), string primaryStorageSn = default(string), string extendedStorageSn = default(string), string primaryStorageTotalSize = default(string), string primaryStorageUsed = default(string), string primaryStorageFree = default(string), string extendedStorageTotalSize = default(string), string extendedStorageUsed = default(string), string extendedStorageFree = default(string), string primaryStorageMountStatus = default(string), string extendedStorageMountStatus = default(string), string primaryStorageSizeStatus = default(string), string extendedStorageSizeStatus = default(string), string primaryStorageAssociation = default(string), string extendedStorageAssociation = default(string), string primaryStorageAuthCode = default(string), string extendedStorageAuthCode = default(string), string systemDataSize = default(string), string diagnosticDataSize = default(string), string primaryLogsSize = default(string), string extendedLogsSize = default(string), string primaryConfigurationBackupSize = default(string), string extendedConfigurationBackupSize = default(string), string primaryCaptureAtpReports = default(string), string extendedCaptureAtpReports = default(string), string primaryApplicationFlowReports = default(string), string extendedApplicationFlowReports = default(string), string primaryPacketCaptures = default(string), string extendedPacketCaptures = default(string))
        {
            this.ExtendedStorageEnabled = extendedStorageEnabled;
            this.PrimaryStorageMounted = primaryStorageMounted;
            this.ExtendedStorageMounted = extendedStorageMounted;
            this.ExtendedStorageDeviceNumber = extendedStorageDeviceNumber;
            this.LogsOnWhichStorageDevice = logsOnWhichStorageDevice;
            this.LogsOnStorageEnabled = logsOnStorageEnabled;
            this.PrimaryStorageSn = primaryStorageSn;
            this.ExtendedStorageSn = extendedStorageSn;
            this.PrimaryStorageTotalSize = primaryStorageTotalSize;
            this.PrimaryStorageUsed = primaryStorageUsed;
            this.PrimaryStorageFree = primaryStorageFree;
            this.ExtendedStorageTotalSize = extendedStorageTotalSize;
            this.ExtendedStorageUsed = extendedStorageUsed;
            this.ExtendedStorageFree = extendedStorageFree;
            this.PrimaryStorageMountStatus = primaryStorageMountStatus;
            this.ExtendedStorageMountStatus = extendedStorageMountStatus;
            this.PrimaryStorageSizeStatus = primaryStorageSizeStatus;
            this.ExtendedStorageSizeStatus = extendedStorageSizeStatus;
            this.PrimaryStorageAssociation = primaryStorageAssociation;
            this.ExtendedStorageAssociation = extendedStorageAssociation;
            this.PrimaryStorageAuthCode = primaryStorageAuthCode;
            this.ExtendedStorageAuthCode = extendedStorageAuthCode;
            this.SystemDataSize = systemDataSize;
            this.DiagnosticDataSize = diagnosticDataSize;
            this.PrimaryLogsSize = primaryLogsSize;
            this.ExtendedLogsSize = extendedLogsSize;
            this.PrimaryConfigurationBackupSize = primaryConfigurationBackupSize;
            this.ExtendedConfigurationBackupSize = extendedConfigurationBackupSize;
            this.PrimaryCaptureAtpReports = primaryCaptureAtpReports;
            this.ExtendedCaptureAtpReports = extendedCaptureAtpReports;
            this.PrimaryApplicationFlowReports = primaryApplicationFlowReports;
            this.ExtendedApplicationFlowReports = extendedApplicationFlowReports;
            this.PrimaryPacketCaptures = primaryPacketCaptures;
            this.ExtendedPacketCaptures = extendedPacketCaptures;
        }

        /// <summary>
        /// Gets or Sets ExtendedStorageEnabled
        /// </summary>
        [DataMember(Name = "extended_storage_enabled", EmitDefaultValue = false)]
        public string ExtendedStorageEnabled { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryStorageMounted
        /// </summary>
        [DataMember(Name = "primary_storage_mounted", EmitDefaultValue = false)]
        public string PrimaryStorageMounted { get; set; }

        /// <summary>
        /// Gets or Sets ExtendedStorageMounted
        /// </summary>
        [DataMember(Name = "extended_storage_mounted", EmitDefaultValue = false)]
        public string ExtendedStorageMounted { get; set; }

        /// <summary>
        /// Gets or Sets ExtendedStorageDeviceNumber
        /// </summary>
        [DataMember(Name = "extended_storage_device_number", EmitDefaultValue = false)]
        public string ExtendedStorageDeviceNumber { get; set; }

        /// <summary>
        /// Gets or Sets LogsOnWhichStorageDevice
        /// </summary>
        [DataMember(Name = "logs_on_Which_storage_device", EmitDefaultValue = false)]
        public string LogsOnWhichStorageDevice { get; set; }

        /// <summary>
        /// Gets or Sets LogsOnStorageEnabled
        /// </summary>
        [DataMember(Name = "logs_on_storage_enabled", EmitDefaultValue = false)]
        public string LogsOnStorageEnabled { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryStorageSn
        /// </summary>
        [DataMember(Name = "primary_storage_sn", EmitDefaultValue = false)]
        public string PrimaryStorageSn { get; set; }

        /// <summary>
        /// Gets or Sets ExtendedStorageSn
        /// </summary>
        [DataMember(Name = "extended_storage_sn", EmitDefaultValue = false)]
        public string ExtendedStorageSn { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryStorageTotalSize
        /// </summary>
        [DataMember(Name = "primary_storage_total_size", EmitDefaultValue = false)]
        public string PrimaryStorageTotalSize { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryStorageUsed
        /// </summary>
        [DataMember(Name = "primary_storage_used", EmitDefaultValue = false)]
        public string PrimaryStorageUsed { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryStorageFree
        /// </summary>
        [DataMember(Name = "primary_storage_free", EmitDefaultValue = false)]
        public string PrimaryStorageFree { get; set; }

        /// <summary>
        /// Gets or Sets ExtendedStorageTotalSize
        /// </summary>
        [DataMember(Name = "extended_storage_total_size", EmitDefaultValue = false)]
        public string ExtendedStorageTotalSize { get; set; }

        /// <summary>
        /// Gets or Sets ExtendedStorageUsed
        /// </summary>
        [DataMember(Name = "extended_storage_used", EmitDefaultValue = false)]
        public string ExtendedStorageUsed { get; set; }

        /// <summary>
        /// Gets or Sets ExtendedStorageFree
        /// </summary>
        [DataMember(Name = "extended_storage_free", EmitDefaultValue = false)]
        public string ExtendedStorageFree { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryStorageMountStatus
        /// </summary>
        [DataMember(Name = "primary_storage_mount_status", EmitDefaultValue = false)]
        public string PrimaryStorageMountStatus { get; set; }

        /// <summary>
        /// Gets or Sets ExtendedStorageMountStatus
        /// </summary>
        [DataMember(Name = "extended_storage_mount_status", EmitDefaultValue = false)]
        public string ExtendedStorageMountStatus { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryStorageSizeStatus
        /// </summary>
        [DataMember(Name = "primary_storage_size_status", EmitDefaultValue = false)]
        public string PrimaryStorageSizeStatus { get; set; }

        /// <summary>
        /// Gets or Sets ExtendedStorageSizeStatus
        /// </summary>
        [DataMember(Name = "extended_storage_size_status", EmitDefaultValue = false)]
        public string ExtendedStorageSizeStatus { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryStorageAssociation
        /// </summary>
        [DataMember(Name = "primary_storage_association", EmitDefaultValue = false)]
        public string PrimaryStorageAssociation { get; set; }

        /// <summary>
        /// Gets or Sets ExtendedStorageAssociation
        /// </summary>
        [DataMember(Name = "extended_storage_association", EmitDefaultValue = false)]
        public string ExtendedStorageAssociation { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryStorageAuthCode
        /// </summary>
        [DataMember(Name = "primary_storage_auth_code", EmitDefaultValue = false)]
        public string PrimaryStorageAuthCode { get; set; }

        /// <summary>
        /// Gets or Sets ExtendedStorageAuthCode
        /// </summary>
        [DataMember(Name = "extended_storage_auth_code", EmitDefaultValue = false)]
        public string ExtendedStorageAuthCode { get; set; }

        /// <summary>
        /// Gets or Sets SystemDataSize
        /// </summary>
        [DataMember(Name = "system_data_size", EmitDefaultValue = false)]
        public string SystemDataSize { get; set; }

        /// <summary>
        /// Gets or Sets DiagnosticDataSize
        /// </summary>
        [DataMember(Name = "diagnostic_data_size", EmitDefaultValue = false)]
        public string DiagnosticDataSize { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryLogsSize
        /// </summary>
        [DataMember(Name = "primary_logs_size", EmitDefaultValue = false)]
        public string PrimaryLogsSize { get; set; }

        /// <summary>
        /// Gets or Sets ExtendedLogsSize
        /// </summary>
        [DataMember(Name = "extended_logs_size", EmitDefaultValue = false)]
        public string ExtendedLogsSize { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryConfigurationBackupSize
        /// </summary>
        [DataMember(Name = "primary_configuration_backup_size", EmitDefaultValue = false)]
        public string PrimaryConfigurationBackupSize { get; set; }

        /// <summary>
        /// Gets or Sets ExtendedConfigurationBackupSize
        /// </summary>
        [DataMember(Name = "extended_configuration_backup_size", EmitDefaultValue = false)]
        public string ExtendedConfigurationBackupSize { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryCaptureAtpReports
        /// </summary>
        [DataMember(Name = "primary_capture_atp_reports", EmitDefaultValue = false)]
        public string PrimaryCaptureAtpReports { get; set; }

        /// <summary>
        /// Gets or Sets ExtendedCaptureAtpReports
        /// </summary>
        [DataMember(Name = "extended_capture_atp_reports", EmitDefaultValue = false)]
        public string ExtendedCaptureAtpReports { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryApplicationFlowReports
        /// </summary>
        [DataMember(Name = "primary_application_flow_reports", EmitDefaultValue = false)]
        public string PrimaryApplicationFlowReports { get; set; }

        /// <summary>
        /// Gets or Sets ExtendedApplicationFlowReports
        /// </summary>
        [DataMember(Name = "extended_application_flow_reports", EmitDefaultValue = false)]
        public string ExtendedApplicationFlowReports { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryPacketCaptures
        /// </summary>
        [DataMember(Name = "primary_packet_captures", EmitDefaultValue = false)]
        public string PrimaryPacketCaptures { get; set; }

        /// <summary>
        /// Gets or Sets ExtendedPacketCaptures
        /// </summary>
        [DataMember(Name = "extended_packet_captures", EmitDefaultValue = false)]
        public string ExtendedPacketCaptures { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ShowStatusSystemStorageDetail {\n");
            sb.Append("  ExtendedStorageEnabled: ").Append(ExtendedStorageEnabled).Append("\n");
            sb.Append("  PrimaryStorageMounted: ").Append(PrimaryStorageMounted).Append("\n");
            sb.Append("  ExtendedStorageMounted: ").Append(ExtendedStorageMounted).Append("\n");
            sb.Append("  ExtendedStorageDeviceNumber: ").Append(ExtendedStorageDeviceNumber).Append("\n");
            sb.Append("  LogsOnWhichStorageDevice: ").Append(LogsOnWhichStorageDevice).Append("\n");
            sb.Append("  LogsOnStorageEnabled: ").Append(LogsOnStorageEnabled).Append("\n");
            sb.Append("  PrimaryStorageSn: ").Append(PrimaryStorageSn).Append("\n");
            sb.Append("  ExtendedStorageSn: ").Append(ExtendedStorageSn).Append("\n");
            sb.Append("  PrimaryStorageTotalSize: ").Append(PrimaryStorageTotalSize).Append("\n");
            sb.Append("  PrimaryStorageUsed: ").Append(PrimaryStorageUsed).Append("\n");
            sb.Append("  PrimaryStorageFree: ").Append(PrimaryStorageFree).Append("\n");
            sb.Append("  ExtendedStorageTotalSize: ").Append(ExtendedStorageTotalSize).Append("\n");
            sb.Append("  ExtendedStorageUsed: ").Append(ExtendedStorageUsed).Append("\n");
            sb.Append("  ExtendedStorageFree: ").Append(ExtendedStorageFree).Append("\n");
            sb.Append("  PrimaryStorageMountStatus: ").Append(PrimaryStorageMountStatus).Append("\n");
            sb.Append("  ExtendedStorageMountStatus: ").Append(ExtendedStorageMountStatus).Append("\n");
            sb.Append("  PrimaryStorageSizeStatus: ").Append(PrimaryStorageSizeStatus).Append("\n");
            sb.Append("  ExtendedStorageSizeStatus: ").Append(ExtendedStorageSizeStatus).Append("\n");
            sb.Append("  PrimaryStorageAssociation: ").Append(PrimaryStorageAssociation).Append("\n");
            sb.Append("  ExtendedStorageAssociation: ").Append(ExtendedStorageAssociation).Append("\n");
            sb.Append("  PrimaryStorageAuthCode: ").Append(PrimaryStorageAuthCode).Append("\n");
            sb.Append("  ExtendedStorageAuthCode: ").Append(ExtendedStorageAuthCode).Append("\n");
            sb.Append("  SystemDataSize: ").Append(SystemDataSize).Append("\n");
            sb.Append("  DiagnosticDataSize: ").Append(DiagnosticDataSize).Append("\n");
            sb.Append("  PrimaryLogsSize: ").Append(PrimaryLogsSize).Append("\n");
            sb.Append("  ExtendedLogsSize: ").Append(ExtendedLogsSize).Append("\n");
            sb.Append("  PrimaryConfigurationBackupSize: ").Append(PrimaryConfigurationBackupSize).Append("\n");
            sb.Append("  ExtendedConfigurationBackupSize: ").Append(ExtendedConfigurationBackupSize).Append("\n");
            sb.Append("  PrimaryCaptureAtpReports: ").Append(PrimaryCaptureAtpReports).Append("\n");
            sb.Append("  ExtendedCaptureAtpReports: ").Append(ExtendedCaptureAtpReports).Append("\n");
            sb.Append("  PrimaryApplicationFlowReports: ").Append(PrimaryApplicationFlowReports).Append("\n");
            sb.Append("  ExtendedApplicationFlowReports: ").Append(ExtendedApplicationFlowReports).Append("\n");
            sb.Append("  PrimaryPacketCaptures: ").Append(PrimaryPacketCaptures).Append("\n");
            sb.Append("  ExtendedPacketCaptures: ").Append(ExtendedPacketCaptures).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ShowStatusSystemStorageDetail);
        }

        /// <summary>
        /// Returns true if ShowStatusSystemStorageDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of ShowStatusSystemStorageDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ShowStatusSystemStorageDetail input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ExtendedStorageEnabled == input.ExtendedStorageEnabled ||
                    (this.ExtendedStorageEnabled != null &&
                    this.ExtendedStorageEnabled.Equals(input.ExtendedStorageEnabled))
                ) && 
                (
                    this.PrimaryStorageMounted == input.PrimaryStorageMounted ||
                    (this.PrimaryStorageMounted != null &&
                    this.PrimaryStorageMounted.Equals(input.PrimaryStorageMounted))
                ) && 
                (
                    this.ExtendedStorageMounted == input.ExtendedStorageMounted ||
                    (this.ExtendedStorageMounted != null &&
                    this.ExtendedStorageMounted.Equals(input.ExtendedStorageMounted))
                ) && 
                (
                    this.ExtendedStorageDeviceNumber == input.ExtendedStorageDeviceNumber ||
                    (this.ExtendedStorageDeviceNumber != null &&
                    this.ExtendedStorageDeviceNumber.Equals(input.ExtendedStorageDeviceNumber))
                ) && 
                (
                    this.LogsOnWhichStorageDevice == input.LogsOnWhichStorageDevice ||
                    (this.LogsOnWhichStorageDevice != null &&
                    this.LogsOnWhichStorageDevice.Equals(input.LogsOnWhichStorageDevice))
                ) && 
                (
                    this.LogsOnStorageEnabled == input.LogsOnStorageEnabled ||
                    (this.LogsOnStorageEnabled != null &&
                    this.LogsOnStorageEnabled.Equals(input.LogsOnStorageEnabled))
                ) && 
                (
                    this.PrimaryStorageSn == input.PrimaryStorageSn ||
                    (this.PrimaryStorageSn != null &&
                    this.PrimaryStorageSn.Equals(input.PrimaryStorageSn))
                ) && 
                (
                    this.ExtendedStorageSn == input.ExtendedStorageSn ||
                    (this.ExtendedStorageSn != null &&
                    this.ExtendedStorageSn.Equals(input.ExtendedStorageSn))
                ) && 
                (
                    this.PrimaryStorageTotalSize == input.PrimaryStorageTotalSize ||
                    (this.PrimaryStorageTotalSize != null &&
                    this.PrimaryStorageTotalSize.Equals(input.PrimaryStorageTotalSize))
                ) && 
                (
                    this.PrimaryStorageUsed == input.PrimaryStorageUsed ||
                    (this.PrimaryStorageUsed != null &&
                    this.PrimaryStorageUsed.Equals(input.PrimaryStorageUsed))
                ) && 
                (
                    this.PrimaryStorageFree == input.PrimaryStorageFree ||
                    (this.PrimaryStorageFree != null &&
                    this.PrimaryStorageFree.Equals(input.PrimaryStorageFree))
                ) && 
                (
                    this.ExtendedStorageTotalSize == input.ExtendedStorageTotalSize ||
                    (this.ExtendedStorageTotalSize != null &&
                    this.ExtendedStorageTotalSize.Equals(input.ExtendedStorageTotalSize))
                ) && 
                (
                    this.ExtendedStorageUsed == input.ExtendedStorageUsed ||
                    (this.ExtendedStorageUsed != null &&
                    this.ExtendedStorageUsed.Equals(input.ExtendedStorageUsed))
                ) && 
                (
                    this.ExtendedStorageFree == input.ExtendedStorageFree ||
                    (this.ExtendedStorageFree != null &&
                    this.ExtendedStorageFree.Equals(input.ExtendedStorageFree))
                ) && 
                (
                    this.PrimaryStorageMountStatus == input.PrimaryStorageMountStatus ||
                    (this.PrimaryStorageMountStatus != null &&
                    this.PrimaryStorageMountStatus.Equals(input.PrimaryStorageMountStatus))
                ) && 
                (
                    this.ExtendedStorageMountStatus == input.ExtendedStorageMountStatus ||
                    (this.ExtendedStorageMountStatus != null &&
                    this.ExtendedStorageMountStatus.Equals(input.ExtendedStorageMountStatus))
                ) && 
                (
                    this.PrimaryStorageSizeStatus == input.PrimaryStorageSizeStatus ||
                    (this.PrimaryStorageSizeStatus != null &&
                    this.PrimaryStorageSizeStatus.Equals(input.PrimaryStorageSizeStatus))
                ) && 
                (
                    this.ExtendedStorageSizeStatus == input.ExtendedStorageSizeStatus ||
                    (this.ExtendedStorageSizeStatus != null &&
                    this.ExtendedStorageSizeStatus.Equals(input.ExtendedStorageSizeStatus))
                ) && 
                (
                    this.PrimaryStorageAssociation == input.PrimaryStorageAssociation ||
                    (this.PrimaryStorageAssociation != null &&
                    this.PrimaryStorageAssociation.Equals(input.PrimaryStorageAssociation))
                ) && 
                (
                    this.ExtendedStorageAssociation == input.ExtendedStorageAssociation ||
                    (this.ExtendedStorageAssociation != null &&
                    this.ExtendedStorageAssociation.Equals(input.ExtendedStorageAssociation))
                ) && 
                (
                    this.PrimaryStorageAuthCode == input.PrimaryStorageAuthCode ||
                    (this.PrimaryStorageAuthCode != null &&
                    this.PrimaryStorageAuthCode.Equals(input.PrimaryStorageAuthCode))
                ) && 
                (
                    this.ExtendedStorageAuthCode == input.ExtendedStorageAuthCode ||
                    (this.ExtendedStorageAuthCode != null &&
                    this.ExtendedStorageAuthCode.Equals(input.ExtendedStorageAuthCode))
                ) && 
                (
                    this.SystemDataSize == input.SystemDataSize ||
                    (this.SystemDataSize != null &&
                    this.SystemDataSize.Equals(input.SystemDataSize))
                ) && 
                (
                    this.DiagnosticDataSize == input.DiagnosticDataSize ||
                    (this.DiagnosticDataSize != null &&
                    this.DiagnosticDataSize.Equals(input.DiagnosticDataSize))
                ) && 
                (
                    this.PrimaryLogsSize == input.PrimaryLogsSize ||
                    (this.PrimaryLogsSize != null &&
                    this.PrimaryLogsSize.Equals(input.PrimaryLogsSize))
                ) && 
                (
                    this.ExtendedLogsSize == input.ExtendedLogsSize ||
                    (this.ExtendedLogsSize != null &&
                    this.ExtendedLogsSize.Equals(input.ExtendedLogsSize))
                ) && 
                (
                    this.PrimaryConfigurationBackupSize == input.PrimaryConfigurationBackupSize ||
                    (this.PrimaryConfigurationBackupSize != null &&
                    this.PrimaryConfigurationBackupSize.Equals(input.PrimaryConfigurationBackupSize))
                ) && 
                (
                    this.ExtendedConfigurationBackupSize == input.ExtendedConfigurationBackupSize ||
                    (this.ExtendedConfigurationBackupSize != null &&
                    this.ExtendedConfigurationBackupSize.Equals(input.ExtendedConfigurationBackupSize))
                ) && 
                (
                    this.PrimaryCaptureAtpReports == input.PrimaryCaptureAtpReports ||
                    (this.PrimaryCaptureAtpReports != null &&
                    this.PrimaryCaptureAtpReports.Equals(input.PrimaryCaptureAtpReports))
                ) && 
                (
                    this.ExtendedCaptureAtpReports == input.ExtendedCaptureAtpReports ||
                    (this.ExtendedCaptureAtpReports != null &&
                    this.ExtendedCaptureAtpReports.Equals(input.ExtendedCaptureAtpReports))
                ) && 
                (
                    this.PrimaryApplicationFlowReports == input.PrimaryApplicationFlowReports ||
                    (this.PrimaryApplicationFlowReports != null &&
                    this.PrimaryApplicationFlowReports.Equals(input.PrimaryApplicationFlowReports))
                ) && 
                (
                    this.ExtendedApplicationFlowReports == input.ExtendedApplicationFlowReports ||
                    (this.ExtendedApplicationFlowReports != null &&
                    this.ExtendedApplicationFlowReports.Equals(input.ExtendedApplicationFlowReports))
                ) && 
                (
                    this.PrimaryPacketCaptures == input.PrimaryPacketCaptures ||
                    (this.PrimaryPacketCaptures != null &&
                    this.PrimaryPacketCaptures.Equals(input.PrimaryPacketCaptures))
                ) && 
                (
                    this.ExtendedPacketCaptures == input.ExtendedPacketCaptures ||
                    (this.ExtendedPacketCaptures != null &&
                    this.ExtendedPacketCaptures.Equals(input.ExtendedPacketCaptures))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ExtendedStorageEnabled != null)
                {
                    hashCode = (hashCode * 59) + this.ExtendedStorageEnabled.GetHashCode();
                }
                if (this.PrimaryStorageMounted != null)
                {
                    hashCode = (hashCode * 59) + this.PrimaryStorageMounted.GetHashCode();
                }
                if (this.ExtendedStorageMounted != null)
                {
                    hashCode = (hashCode * 59) + this.ExtendedStorageMounted.GetHashCode();
                }
                if (this.ExtendedStorageDeviceNumber != null)
                {
                    hashCode = (hashCode * 59) + this.ExtendedStorageDeviceNumber.GetHashCode();
                }
                if (this.LogsOnWhichStorageDevice != null)
                {
                    hashCode = (hashCode * 59) + this.LogsOnWhichStorageDevice.GetHashCode();
                }
                if (this.LogsOnStorageEnabled != null)
                {
                    hashCode = (hashCode * 59) + this.LogsOnStorageEnabled.GetHashCode();
                }
                if (this.PrimaryStorageSn != null)
                {
                    hashCode = (hashCode * 59) + this.PrimaryStorageSn.GetHashCode();
                }
                if (this.ExtendedStorageSn != null)
                {
                    hashCode = (hashCode * 59) + this.ExtendedStorageSn.GetHashCode();
                }
                if (this.PrimaryStorageTotalSize != null)
                {
                    hashCode = (hashCode * 59) + this.PrimaryStorageTotalSize.GetHashCode();
                }
                if (this.PrimaryStorageUsed != null)
                {
                    hashCode = (hashCode * 59) + this.PrimaryStorageUsed.GetHashCode();
                }
                if (this.PrimaryStorageFree != null)
                {
                    hashCode = (hashCode * 59) + this.PrimaryStorageFree.GetHashCode();
                }
                if (this.ExtendedStorageTotalSize != null)
                {
                    hashCode = (hashCode * 59) + this.ExtendedStorageTotalSize.GetHashCode();
                }
                if (this.ExtendedStorageUsed != null)
                {
                    hashCode = (hashCode * 59) + this.ExtendedStorageUsed.GetHashCode();
                }
                if (this.ExtendedStorageFree != null)
                {
                    hashCode = (hashCode * 59) + this.ExtendedStorageFree.GetHashCode();
                }
                if (this.PrimaryStorageMountStatus != null)
                {
                    hashCode = (hashCode * 59) + this.PrimaryStorageMountStatus.GetHashCode();
                }
                if (this.ExtendedStorageMountStatus != null)
                {
                    hashCode = (hashCode * 59) + this.ExtendedStorageMountStatus.GetHashCode();
                }
                if (this.PrimaryStorageSizeStatus != null)
                {
                    hashCode = (hashCode * 59) + this.PrimaryStorageSizeStatus.GetHashCode();
                }
                if (this.ExtendedStorageSizeStatus != null)
                {
                    hashCode = (hashCode * 59) + this.ExtendedStorageSizeStatus.GetHashCode();
                }
                if (this.PrimaryStorageAssociation != null)
                {
                    hashCode = (hashCode * 59) + this.PrimaryStorageAssociation.GetHashCode();
                }
                if (this.ExtendedStorageAssociation != null)
                {
                    hashCode = (hashCode * 59) + this.ExtendedStorageAssociation.GetHashCode();
                }
                if (this.PrimaryStorageAuthCode != null)
                {
                    hashCode = (hashCode * 59) + this.PrimaryStorageAuthCode.GetHashCode();
                }
                if (this.ExtendedStorageAuthCode != null)
                {
                    hashCode = (hashCode * 59) + this.ExtendedStorageAuthCode.GetHashCode();
                }
                if (this.SystemDataSize != null)
                {
                    hashCode = (hashCode * 59) + this.SystemDataSize.GetHashCode();
                }
                if (this.DiagnosticDataSize != null)
                {
                    hashCode = (hashCode * 59) + this.DiagnosticDataSize.GetHashCode();
                }
                if (this.PrimaryLogsSize != null)
                {
                    hashCode = (hashCode * 59) + this.PrimaryLogsSize.GetHashCode();
                }
                if (this.ExtendedLogsSize != null)
                {
                    hashCode = (hashCode * 59) + this.ExtendedLogsSize.GetHashCode();
                }
                if (this.PrimaryConfigurationBackupSize != null)
                {
                    hashCode = (hashCode * 59) + this.PrimaryConfigurationBackupSize.GetHashCode();
                }
                if (this.ExtendedConfigurationBackupSize != null)
                {
                    hashCode = (hashCode * 59) + this.ExtendedConfigurationBackupSize.GetHashCode();
                }
                if (this.PrimaryCaptureAtpReports != null)
                {
                    hashCode = (hashCode * 59) + this.PrimaryCaptureAtpReports.GetHashCode();
                }
                if (this.ExtendedCaptureAtpReports != null)
                {
                    hashCode = (hashCode * 59) + this.ExtendedCaptureAtpReports.GetHashCode();
                }
                if (this.PrimaryApplicationFlowReports != null)
                {
                    hashCode = (hashCode * 59) + this.PrimaryApplicationFlowReports.GetHashCode();
                }
                if (this.ExtendedApplicationFlowReports != null)
                {
                    hashCode = (hashCode * 59) + this.ExtendedApplicationFlowReports.GetHashCode();
                }
                if (this.PrimaryPacketCaptures != null)
                {
                    hashCode = (hashCode * 59) + this.PrimaryPacketCaptures.GetHashCode();
                }
                if (this.ExtendedPacketCaptures != null)
                {
                    hashCode = (hashCode * 59) + this.ExtendedPacketCaptures.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
